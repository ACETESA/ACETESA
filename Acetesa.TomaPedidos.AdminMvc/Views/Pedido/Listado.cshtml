@model Acetesa.TomaPedidos.AdminMvc.Models.PedidoFindViewModel
@{
    ViewBag.Title = "Listado de Pedidos";
}

@using (Ajax.BeginForm(new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "OnBegin",
    OnSuccess = "OnSuccess",
    OnComplete = "OnComplete",
    OnFailure = "OnFailure",
    UpdateTargetId = "result"
}))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("page")


    <div class="card">
        <div class="card-header bg-success text-bg-secondary">
            <h3>Listado de Pedidos</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-12 mb-3">
                    @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "form-label ps-2" })
                    <div class="input-group">
                        @Html.DropDownListFor(model => model.Cliente, ViewBag.GetClientes as SelectList, new { @class = "selectpicker" })
                        @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger", @id = "msgeCliente" })
                        <script>
                            $('#Cliente').attr('data-show-subtext', 'true');
                            $('#Cliente').attr('data-live-search', 'true');
                            $('#Cliente').attr('data-width', '100%');
                        </script>
                        <style>
                            .bootstrap-select .dropdown-menu {
                                max-width: 100% !important;
                            }
                        </style>
                    </div>
                </div>
                <div class="col-12 mb-3">
                    @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.FechaInicio, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 mb-3">
                    @Html.LabelFor(model => model.FechaFinal, htmlAttributes: new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.FechaFinal, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FechaFinal, "", new { @class = "text-danger" })
                </div>
                <div class="col-12 mb-3">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "form-label" })
                    @Html.DropDownListFor(model => model.Estado, ViewBag.GetEstados as SelectList, new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="card-footer">
            @Html.ActionLink("Nuevo", "Nuevo", "Pedido", new { id = "", reset = 1 }, new { @class = "btn btn-outline-success" })
            <input type="submit" value="Buscar" id="btnEnviar" class="btn btn-dark" />
        </div>
    </div>
}

<div class="table-responsive" id="result">
    @if (Model != null && Model.PagedListListaEntity != null && Model.PagedListListaEntity.Any())
    {
        Html.RenderPartial("_PartialPedidoList", Model);
    }
</div>

@section CssTop{
    @Styles.Render("~/Content/ui")
    <link href="~/Content/toastr.min.css" rel="stylesheet" />
    <link href="~/Content/PagedList.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script src="~/Scripts/jquery.maskedinput.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/lib/Ajax.js?v=1"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <script>
        _baseUrl = "@ViewBag.BaseUrl";
    </script>
    <script src="~/Scripts/app/PedidoFindScript.js?v=3"></script>
    <script>
        var urlRegistrarDocumentoOC = '@Url.Action("RegistrarDocumentoOC", "Pedido")'
        var urlSelectClientesSegunCarteraVendedor = '@Url.Action("SelectClientesSegunCarteraVendedor", "Cliente")';
    </script>
}