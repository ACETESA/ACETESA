//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Acetesa.TomaPedidos.DataEntityFramework.Models.ZicoErpContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsca2674fbf75a2001ed108ae1f5d06992037c63c19d30b6cbcd2108558be1b9cb))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.5.0")]
    internal sealed class ViewsForBaseEntitySetsca2674fbf75a2001ed108ae1f5d06992037c63c19d30b6cbcd2108558be1b9cb : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "ca2674fbf75a2001ed108ae1f5d06992037c63c19d30b6cbcd2108558be1b9cb"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.AlmCierremes")
            {
                return GetView0();
            }

            if (extentName == "ZicoErpContext.AlmCierremes")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.LCPEDIDO_WEB")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.LCPROF_WEB")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.LDPROF_WEB")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.MARTICUL")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.LDPEDIDO_WEB")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.TLISTAPRECIO")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.MCLIENTE")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.TCONDVTA")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.TMONEDA")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.TSUCCLIE")
            {
                return GetView11();
            }

            if (extentName == "ZicoErpContext.LCPEDIDO_WEB")
            {
                return GetView12();
            }

            if (extentName == "ZicoErpContext.LcprofWebs")
            {
                return GetView13();
            }

            if (extentName == "ZicoErpContext.LdprofWebs")
            {
                return GetView14();
            }

            if (extentName == "ZicoErpContext.MarticuLs")
            {
                return GetView15();
            }

            if (extentName == "ZicoErpContext.LDPEDIDO_WEB")
            {
                return GetView16();
            }

            if (extentName == "ZicoErpContext.Tlistaprecios")
            {
                return GetView17();
            }

            if (extentName == "ZicoErpContext.Mclientes")
            {
                return GetView18();
            }

            if (extentName == "ZicoErpContext.Tcondvtas")
            {
                return GetView19();
            }

            if (extentName == "ZicoErpContext.Tmonedas")
            {
                return GetView20();
            }

            if (extentName == "ZicoErpContext.TSUCCLIEs")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.Lkardex")
            {
                return GetView22();
            }

            if (extentName == "ZicoErpContext.LkardeXes")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.Sarticxalmacen")
            {
                return GetView24();
            }

            if (extentName == "ZicoErpContext.SarticxalmaceNs")
            {
                return GetView25();
            }

            if (extentName == "CodeFirstDatabase.Talmacen")
            {
                return GetView26();
            }

            if (extentName == "ZicoErpContext.TalmaceNs")
            {
                return GetView27();
            }

            if (extentName == "CodeFirstDatabase.TESTADO")
            {
                return GetView28();
            }

            if (extentName == "ZicoErpContext.Testados")
            {
                return GetView29();
            }

            if (extentName == "CodeFirstDatabase.Tfamiart")
            {
                return GetView30();
            }

            if (extentName == "ZicoErpContext.TfamiarTs")
            {
                return GetView31();
            }

            if (extentName == "CodeFirstDatabase.Tgruartecduf")
            {
                return GetView32();
            }

            if (extentName == "ZicoErpContext.TgruartecduFs")
            {
                return GetView33();
            }

            if (extentName == "CodeFirstDatabase.Tgruartec")
            {
                return GetView34();
            }

            if (extentName == "ZicoErpContext.TgruarteCs")
            {
                return GetView35();
            }

            if (extentName == "CodeFirstDatabase.tipo_cambio_diario")
            {
                return GetView36();
            }

            if (extentName == "ZicoErpContext.TipoCambioDiarios")
            {
                return GetView37();
            }

            if (extentName == "CodeFirstDatabase.Tmarca")
            {
                return GetView38();
            }

            if (extentName == "ZicoErpContext.TmarcAs")
            {
                return GetView39();
            }

            if (extentName == "CodeFirstDatabase.Tmodelo")
            {
                return GetView40();
            }

            if (extentName == "ZicoErpContext.TmodelOes")
            {
                return GetView41();
            }

            if (extentName == "CodeFirstDatabase.Tsubgruartecduf")
            {
                return GetView42();
            }

            if (extentName == "ZicoErpContext.TsubgruartecduFs")
            {
                return GetView43();
            }

            if (extentName == "CodeFirstDatabase.Tsubgruartec")
            {
                return GetView44();
            }

            if (extentName == "ZicoErpContext.TsubgruarteCs")
            {
                return GetView45();
            }

            if (extentName == "CodeFirstDatabase.Ttipoartic")
            {
                return GetView46();
            }

            if (extentName == "ZicoErpContext.TtipoartiCs")
            {
                return GetView47();
            }

            if (extentName == "CodeFirstDatabase.Usuario")
            {
                return GetView48();
            }

            if (extentName == "ZicoErpContext.Usuarios")
            {
                return GetView49();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.AlmCierremes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AlmCierremes
        [CodeFirstDatabaseSchema.AlmCierremes](T1.[AlmCierremes.cc_anho], T1.[AlmCierremes.cc_mes])
    FROM (
        SELECT 
            T.cc_anho AS [AlmCierremes.cc_anho], 
            T.cc_mes AS [AlmCierremes.cc_mes], 
            True AS _from0
        FROM ZicoErpContext.AlmCierremes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.AlmCierremes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AlmCierremes
        [Acetesa.TomaPedidos.DataEntityFramework.Models.AlmCierremes](T1.[AlmCierremes.cc_anho], T1.[AlmCierremes.cc_mes])
    FROM (
        SELECT 
            T.cc_anho AS [AlmCierremes.cc_anho], 
            T.cc_mes AS [AlmCierremes.cc_mes], 
            True AS _from0
        FROM CodeFirstDatabase.AlmCierremes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LCPEDIDO_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LCPEDIDO_WEB
        [CodeFirstDatabaseSchema.LCPEDIDO_WEB](T1.[LCPEDIDO_WEB.cn_pedido], T1.[LCPEDIDO_WEB.cn_proforma], T1.[LCPEDIDO_WEB.cc_tipana], T1.[LCPEDIDO_WEB.cc_analis], T1.[LCPEDIDO_WEB.cn_suc], T1.[LCPEDIDO_WEB.cd_razsoc], T1.[LCPEDIDO_WEB.cc_moneda], T1.[LCPEDIDO_WEB.cc_vta], T1.[LCPEDIDO_WEB.df_proceso], T1.[LCPEDIDO_WEB.df_emision], T1.[LCPEDIDO_WEB.fm_tipcam], T1.[LCPEDIDO_WEB.fm_valvta], T1.[LCPEDIDO_WEB.fm_igv], T1.[LCPEDIDO_WEB.fm_totvta], T1.[LCPEDIDO_WEB.cb_recojo], T1.[LCPEDIDO_WEB.cb_estado])
    FROM (
        SELECT 
            T.cn_pedido AS [LCPEDIDO_WEB.cn_pedido], 
            T.cn_proforma AS [LCPEDIDO_WEB.cn_proforma], 
            T.cc_tipana AS [LCPEDIDO_WEB.cc_tipana], 
            T.cc_analis AS [LCPEDIDO_WEB.cc_analis], 
            T.cn_suc AS [LCPEDIDO_WEB.cn_suc], 
            T.cd_razsoc AS [LCPEDIDO_WEB.cd_razsoc], 
            T.cc_moneda AS [LCPEDIDO_WEB.cc_moneda], 
            T.cc_vta AS [LCPEDIDO_WEB.cc_vta], 
            T.df_proceso AS [LCPEDIDO_WEB.df_proceso], 
            T.df_emision AS [LCPEDIDO_WEB.df_emision], 
            T.fm_tipcam AS [LCPEDIDO_WEB.fm_tipcam], 
            T.fm_valvta AS [LCPEDIDO_WEB.fm_valvta], 
            T.fm_igv AS [LCPEDIDO_WEB.fm_igv], 
            T.fm_totvta AS [LCPEDIDO_WEB.fm_totvta], 
            T.cb_recojo AS [LCPEDIDO_WEB.cb_recojo], 
            T.cb_estado AS [LCPEDIDO_WEB.cb_estado], 
            True AS _from0
        FROM ZicoErpContext.LCPEDIDO_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LCPROF_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LCPROF_WEB
        [CodeFirstDatabaseSchema.LCPROF_WEB](T1.[LCPROF_WEB.cn_proforma], T1.[LCPROF_WEB.cc_tipana], T1.[LCPROF_WEB.cc_analis], T1.[LCPROF_WEB.cd_razsoc], T1.[LCPROF_WEB.cc_moneda], T1.[LCPROF_WEB.cc_vta], T1.[LCPROF_WEB.df_proceso], T1.[LCPROF_WEB.df_emision], T1.[LCPROF_WEB.fm_tipcam], T1.[LCPROF_WEB.fm_valvta], T1.[LCPROF_WEB.fm_igv], T1.[LCPROF_WEB.fm_totvta], T1.[LCPROF_WEB.cb_estado], T1.[LCPROF_WEB.VisitaClienteID])
    FROM (
        SELECT 
            T.cn_proforma AS [LCPROF_WEB.cn_proforma], 
            T.cc_tipana AS [LCPROF_WEB.cc_tipana], 
            T.cc_analis AS [LCPROF_WEB.cc_analis], 
            T.cd_razsoc AS [LCPROF_WEB.cd_razsoc], 
            T.cc_moneda AS [LCPROF_WEB.cc_moneda], 
            T.cc_vta AS [LCPROF_WEB.cc_vta], 
            T.df_proceso AS [LCPROF_WEB.df_proceso], 
            T.df_emision AS [LCPROF_WEB.df_emision], 
            T.fm_tipcam AS [LCPROF_WEB.fm_tipcam], 
            T.fm_valvta AS [LCPROF_WEB.fm_valvta], 
            T.fm_igv AS [LCPROF_WEB.fm_igv], 
            T.fm_totvta AS [LCPROF_WEB.fm_totvta], 
            T.cb_estado AS [LCPROF_WEB.cb_estado], 
            T.VisitaClienteID AS [LCPROF_WEB.VisitaClienteID], 
            True AS _from0
        FROM ZicoErpContext.LcprofWebs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LDPROF_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LDPROF_WEB
        [CodeFirstDatabaseSchema.LDPROF_WEB](T1.[LDPROF_WEB.cn_proforma], T1.[LDPROF_WEB.cn_item], T1.[LDPROF_WEB.cc_artic], T1.[LDPROF_WEB.fq_cantidad], T1.[LDPROF_WEB.fq_stock], T1.[LDPROF_WEB.cc_lista], T1.[LDPROF_WEB.fm_precio], T1.[LDPROF_WEB.fm_precio2], T1.[LDPROF_WEB.fm_precio_fin], T1.[LDPROF_WEB.fm_total], T1.[LDPROF_WEB.fq_peso])
    FROM (
        SELECT 
            T.cn_proforma AS [LDPROF_WEB.cn_proforma], 
            T.cn_item AS [LDPROF_WEB.cn_item], 
            T.cc_artic AS [LDPROF_WEB.cc_artic], 
            T.fq_cantidad AS [LDPROF_WEB.fq_cantidad], 
            T.fq_stock AS [LDPROF_WEB.fq_stock], 
            T.cc_lista AS [LDPROF_WEB.cc_lista], 
            T.fm_precio AS [LDPROF_WEB.fm_precio], 
            T.fm_precio2 AS [LDPROF_WEB.fm_precio2], 
            T.fm_precio_fin AS [LDPROF_WEB.fm_precio_fin], 
            T.fm_total AS [LDPROF_WEB.fm_total], 
            T.fq_peso AS [LDPROF_WEB.fq_peso], 
            True AS _from0
        FROM ZicoErpContext.LdprofWebs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.MARTICUL.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MARTICUL
        [CodeFirstDatabaseSchema.MARTICUL](T1.[MARTICUL.cc_artic], T1.[MARTICUL.cc_gruart], T1.[MARTICUL.cc_famiart], T1.[MARTICUL.cc_marca], T1.[MARTICUL.cc_gruartec], T1.[MARTICUL.cc_subgruart], T1.[MARTICUL.cc_modelo], T1.[MARTICUL.cd_artic], T1.[MARTICUL.cn_parara], T1.[MARTICUL.cd_artictc], T1.[MARTICUL.cc_unmed], T1.[MARTICUL.df_ultcom], T1.[MARTICUL.fm_ultcom], T1.[MARTICUL.df_ultven], T1.[MARTICUL.fm_ultven], T1.[MARTICUL.cb_undalt], T1.[MARTICUL.cb_activo], T1.[MARTICUL.cb_stocks], T1.[MARTICUL.fq_smin], T1.[MARTICUL.fq_smax], T1.[MARTICUL.fq_nivrepos], T1.[MARTICUL.cb_standard], T1.[MARTICUL.ci_consig], T1.[MARTICUL.cb_nacional], T1.[MARTICUL.cb_critico], T1.[MARTICUL.cb_obsleto], T1.[MARTICUL.cc_barras], T1.[MARTICUL.fm_precprom], T1.[MARTICUL.ct_graf], T1.[MARTICUL.fm_ulco_d], T1.[MARTICUL.fm_ulve_d], T1.[MARTICUL.fm_precprom_d], T1.[MARTICUL.ci_abc], T1.[MARTICUL.cb_catart], T1.[MARTICUL.fm_ultpu], T1.[MARTICUL.fm_ultpu_d], T1.[MARTICUL.fd_stock_cero], T1.[MARTICUL.fm_consumo], T1.[MARTICUL.fq_sinicial], T1.[MARTICUL.cb_estado], T1.[MARTICUL.cb_rotacion], T1.[MARTICUL.cn_partnumber], T1.[MARTICUL.cb_uso], T1.[MARTICUL.cn_item], T1.[MARTICUL.fq_embalaje], T1.[MARTICUL.cc_catalogo], T1.[MARTICUL.cc_tipoartic], T1.[MARTICUL.fq_espesor], T1.[MARTICUL.fq_ancho], T1.[MARTICUL.fq_largo], T1.[MARTICUL.cc_costeo], T1.[MARTICUL.cb_eval_precio], T1.[MARTICUL.cc_tipArt], T1.[MARTICUL.cc_costo_kardexpaqbobi], T1.[MARTICUL.df_creacion], T1.[MARTICUL.fq_sku], T1.[MARTICUL.cc_articant], T1.[MARTICUL.cc_color], T1.[MARTICUL.cb_peso_pt], T1.[MARTICUL.cb_mprima], T1.[MARTICUL.cc_simbolo], T1.[MARTICUL.cc_costeo_pocl], T1.[MARTICUL.cc_codpeso], T1.[MARTICUL.cc_gruartecduf], T1.[MARTICUL.cc_subgruartduf], T1.[MARTICUL.c_fl_afecto_percepcion], T1.[MARTICUL.fq_peso_teorico])
    FROM (
        SELECT 
            T.cc_artic AS [MARTICUL.cc_artic], 
            T.cc_gruart AS [MARTICUL.cc_gruart], 
            T.cc_famiart AS [MARTICUL.cc_famiart], 
            T.cc_marca AS [MARTICUL.cc_marca], 
            T.cc_gruartec AS [MARTICUL.cc_gruartec], 
            T.cc_subgruart AS [MARTICUL.cc_subgruart], 
            T.cc_modelo AS [MARTICUL.cc_modelo], 
            T.cd_artic AS [MARTICUL.cd_artic], 
            T.cn_parara AS [MARTICUL.cn_parara], 
            T.cd_artictc AS [MARTICUL.cd_artictc], 
            T.cc_unmed AS [MARTICUL.cc_unmed], 
            T.df_ultcom AS [MARTICUL.df_ultcom], 
            T.fm_ultcom AS [MARTICUL.fm_ultcom], 
            T.df_ultven AS [MARTICUL.df_ultven], 
            T.fm_ultven AS [MARTICUL.fm_ultven], 
            T.cb_undalt AS [MARTICUL.cb_undalt], 
            T.cb_activo AS [MARTICUL.cb_activo], 
            T.cb_stocks AS [MARTICUL.cb_stocks], 
            T.fq_smin AS [MARTICUL.fq_smin], 
            T.fq_smax AS [MARTICUL.fq_smax], 
            T.fq_nivrepos AS [MARTICUL.fq_nivrepos], 
            T.cb_standard AS [MARTICUL.cb_standard], 
            T.ci_consig AS [MARTICUL.ci_consig], 
            T.cb_nacional AS [MARTICUL.cb_nacional], 
            T.cb_critico AS [MARTICUL.cb_critico], 
            T.cb_obsleto AS [MARTICUL.cb_obsleto], 
            T.cc_barras AS [MARTICUL.cc_barras], 
            T.fm_precprom AS [MARTICUL.fm_precprom], 
            T.ct_graf AS [MARTICUL.ct_graf], 
            T.fm_ulco_d AS [MARTICUL.fm_ulco_d], 
            T.fm_ulve_d AS [MARTICUL.fm_ulve_d], 
            T.fm_precprom_d AS [MARTICUL.fm_precprom_d], 
            T.ci_abc AS [MARTICUL.ci_abc], 
            T.cb_catart AS [MARTICUL.cb_catart], 
            T.fm_ultpu AS [MARTICUL.fm_ultpu], 
            T.fm_ultpu_d AS [MARTICUL.fm_ultpu_d], 
            T.fd_stock_cero AS [MARTICUL.fd_stock_cero], 
            T.fm_consumo AS [MARTICUL.fm_consumo], 
            T.fq_sinicial AS [MARTICUL.fq_sinicial], 
            T.cb_estado AS [MARTICUL.cb_estado], 
            T.cb_rotacion AS [MARTICUL.cb_rotacion], 
            T.cn_partnumber AS [MARTICUL.cn_partnumber], 
            T.cb_uso AS [MARTICUL.cb_uso], 
            T.cn_item AS [MARTICUL.cn_item], 
            T.fq_embalaje AS [MARTICUL.fq_embalaje], 
            T.cc_catalogo AS [MARTICUL.cc_catalogo], 
            T.cc_tipoartic AS [MARTICUL.cc_tipoartic], 
            T.fq_espesor AS [MARTICUL.fq_espesor], 
            T.fq_ancho AS [MARTICUL.fq_ancho], 
            T.fq_largo AS [MARTICUL.fq_largo], 
            T.cc_costeo AS [MARTICUL.cc_costeo], 
            T.cb_eval_precio AS [MARTICUL.cb_eval_precio], 
            T.cc_tipArt AS [MARTICUL.cc_tipArt], 
            T.cc_costo_kardexpaqbobi AS [MARTICUL.cc_costo_kardexpaqbobi], 
            T.df_creacion AS [MARTICUL.df_creacion], 
            T.fq_sku AS [MARTICUL.fq_sku], 
            T.cc_articant AS [MARTICUL.cc_articant], 
            T.cc_color AS [MARTICUL.cc_color], 
            T.cb_peso_pt AS [MARTICUL.cb_peso_pt], 
            T.cb_mprima AS [MARTICUL.cb_mprima], 
            T.cc_simbolo AS [MARTICUL.cc_simbolo], 
            T.cc_costeo_pocl AS [MARTICUL.cc_costeo_pocl], 
            T.cc_codpeso AS [MARTICUL.cc_codpeso], 
            T.cc_gruartecduf AS [MARTICUL.cc_gruartecduf], 
            T.cc_subgruartduf AS [MARTICUL.cc_subgruartduf], 
            T.c_fl_afecto_percepcion AS [MARTICUL.c_fl_afecto_percepcion], 
            T.fq_peso_teorico AS [MARTICUL.fq_peso_teorico], 
            True AS _from0
        FROM ZicoErpContext.MarticuLs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.LDPEDIDO_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LDPEDIDO_WEB
        [CodeFirstDatabaseSchema.LDPEDIDO_WEB](T1.[LDPEDIDO_WEB.cn_pedido], T1.[LDPEDIDO_WEB.cn_item], T1.[LDPEDIDO_WEB.cc_artic], T1.[LDPEDIDO_WEB.fq_cantidad], T1.[LDPEDIDO_WEB.fq_peso], T1.[LDPEDIDO_WEB.fq_stock], T1.[LDPEDIDO_WEB.cc_lista], T1.[LDPEDIDO_WEB.fm_precio], T1.[LDPEDIDO_WEB.fm_precio2], T1.[LDPEDIDO_WEB.fm_precio_fin], T1.[LDPEDIDO_WEB.fm_total])
    FROM (
        SELECT 
            T.cn_pedido AS [LDPEDIDO_WEB.cn_pedido], 
            T.cn_item AS [LDPEDIDO_WEB.cn_item], 
            T.cc_artic AS [LDPEDIDO_WEB.cc_artic], 
            T.fq_cantidad AS [LDPEDIDO_WEB.fq_cantidad], 
            T.fq_peso AS [LDPEDIDO_WEB.fq_peso], 
            T.fq_stock AS [LDPEDIDO_WEB.fq_stock], 
            T.cc_lista AS [LDPEDIDO_WEB.cc_lista], 
            T.fm_precio AS [LDPEDIDO_WEB.fm_precio], 
            T.fm_precio2 AS [LDPEDIDO_WEB.fm_precio2], 
            T.fm_precio_fin AS [LDPEDIDO_WEB.fm_precio_fin], 
            T.fm_total AS [LDPEDIDO_WEB.fm_total], 
            True AS _from0
        FROM ZicoErpContext.LDPEDIDO_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TLISTAPRECIO.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TLISTAPRECIO
        [CodeFirstDatabaseSchema.TLISTAPRECIO](T1.[TLISTAPRECIO.cc_artic], T1.[TLISTAPRECIO.cc_lista], T1.[TLISTAPRECIO.fm_preciounit], T1.[TLISTAPRECIO.cc_moneda], T1.[TLISTAPRECIO.fm_costounit], T1.[TLISTAPRECIO.fm_dcto1], T1.[TLISTAPRECIO.fm_dcto2], T1.[TLISTAPRECIO.cb_estado], T1.[TLISTAPRECIO.cc_destino], T1.[TLISTAPRECIO.fm_preciounit_ant], T1.[TLISTAPRECIO.c_fl_afecto_percepcion])
    FROM (
        SELECT 
            T.cc_artic AS [TLISTAPRECIO.cc_artic], 
            T.cc_lista AS [TLISTAPRECIO.cc_lista], 
            T.fm_preciounit AS [TLISTAPRECIO.fm_preciounit], 
            T.cc_moneda AS [TLISTAPRECIO.cc_moneda], 
            T.fm_costounit AS [TLISTAPRECIO.fm_costounit], 
            T.fm_dcto1 AS [TLISTAPRECIO.fm_dcto1], 
            T.fm_dcto2 AS [TLISTAPRECIO.fm_dcto2], 
            T.cb_estado AS [TLISTAPRECIO.cb_estado], 
            T.cc_destino AS [TLISTAPRECIO.cc_destino], 
            T.fm_preciounit_ant AS [TLISTAPRECIO.fm_preciounit_ant], 
            T.c_fl_afecto_percepcion AS [TLISTAPRECIO.c_fl_afecto_percepcion], 
            True AS _from0
        FROM ZicoErpContext.Tlistaprecios AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.MCLIENTE.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MCLIENTE
        [CodeFirstDatabaseSchema.MCLIENTE](T1.[MCLIENTE.cc_tipana], T1.[MCLIENTE.cc_analis], T1.[MCLIENTE.cc_pais], T1.[MCLIENTE.cc_dpto], T1.[MCLIENTE.cc_prov], T1.[MCLIENTE.cc_sector], T1.[MCLIENTE.cc_catclie], T1.[MCLIENTE.cc_distrito], T1.[MCLIENTE.cd_razsoc], T1.[MCLIENTE.cc_zona], T1.[MCLIENTE.cb_proced], T1.[MCLIENTE.cd_direc], T1.[MCLIENTE.cn_regind], T1.[MCLIENTE.cn_sanit], T1.[MCLIENTE.cn_regmerc], T1.[MCLIENTE.ct_giro], T1.[MCLIENTE.dt_constit], T1.[MCLIENTE.dt_registro], T1.[MCLIENTE.cn_telf1], T1.[MCLIENTE.cn_telf2], T1.[MCLIENTE.cn_telf3], T1.[MCLIENTE.cn_fax1], T1.[MCLIENTE.cn_fax2], T1.[MCLIENTE.cn_fax3], T1.[MCLIENTE.cb_monfac], T1.[MCLIENTE.cb_limcred], T1.[MCLIENTE.cb_cheque], T1.[MCLIENTE.cb_sucursal], T1.[MCLIENTE.cb_sector], T1.[MCLIENTE.cb_activo], T1.[MCLIENTE.dt_ultcomp], T1.[MCLIENTE.ct_legal], T1.[MCLIENTE.cn_rucleg], T1.[MCLIENTE.dt_ultdeuda], T1.[MCLIENTE.fm_compmn], T1.[MCLIENTE.cd_direcleg], T1.[MCLIENTE.fm_compme], T1.[MCLIENTE.cn_telfleg], T1.[MCLIENTE.fm_acummn], T1.[MCLIENTE.cn_faxleg], T1.[MCLIENTE.fm_acumme], T1.[MCLIENTE.fm_saldomn], T1.[MCLIENTE.fm_saldome], T1.[MCLIENTE.fq_descto], T1.[MCLIENTE.fm_cantporc], T1.[MCLIENTE.fm_desctomn], T1.[MCLIENTE.fm_montporcmn], T1.[MCLIENTE.fm_desctome], T1.[MCLIENTE.fm_montporcme], T1.[MCLIENTE.cb_cheqdif], T1.[MCLIENTE.fm_diferidomn], T1.[MCLIENTE.fm_diferidome], T1.[MCLIENTE.cb_flete], T1.[MCLIENTE.cb_embalaje], T1.[MCLIENTE.cb_moncred], T1.[MCLIENTE.fm_limcred], T1.[MCLIENTE.cd_nomcom], T1.[MCLIENTE.cd_appaterno], T1.[MCLIENTE.cd_apmaterno], T1.[MCLIENTE.cd_nombre1], T1.[MCLIENTE.cd_nombre2], T1.[MCLIENTE.c_fl_agente_percepcion], T1.[MCLIENTE.cc_proyecto], T1.[MCLIENTE.c_cod_documento_identidad], T1.[MCLIENTE.c_fl_vinculacion], T1.[MCLIENTE.ct_email])
    FROM (
        SELECT 
            T.cc_tipana AS [MCLIENTE.cc_tipana], 
            T.cc_analis AS [MCLIENTE.cc_analis], 
            T.cc_pais AS [MCLIENTE.cc_pais], 
            T.cc_dpto AS [MCLIENTE.cc_dpto], 
            T.cc_prov AS [MCLIENTE.cc_prov], 
            T.cc_sector AS [MCLIENTE.cc_sector], 
            T.cc_catclie AS [MCLIENTE.cc_catclie], 
            T.cc_distrito AS [MCLIENTE.cc_distrito], 
            T.cd_razsoc AS [MCLIENTE.cd_razsoc], 
            T.cc_zona AS [MCLIENTE.cc_zona], 
            T.cb_proced AS [MCLIENTE.cb_proced], 
            T.cd_direc AS [MCLIENTE.cd_direc], 
            T.cn_regind AS [MCLIENTE.cn_regind], 
            T.cn_sanit AS [MCLIENTE.cn_sanit], 
            T.cn_regmerc AS [MCLIENTE.cn_regmerc], 
            T.ct_giro AS [MCLIENTE.ct_giro], 
            T.dt_constit AS [MCLIENTE.dt_constit], 
            T.dt_registro AS [MCLIENTE.dt_registro], 
            T.cn_telf1 AS [MCLIENTE.cn_telf1], 
            T.cn_telf2 AS [MCLIENTE.cn_telf2], 
            T.cn_telf3 AS [MCLIENTE.cn_telf3], 
            T.cn_fax1 AS [MCLIENTE.cn_fax1], 
            T.cn_fax2 AS [MCLIENTE.cn_fax2], 
            T.cn_fax3 AS [MCLIENTE.cn_fax3], 
            T.cb_monfac AS [MCLIENTE.cb_monfac], 
            T.cb_limcred AS [MCLIENTE.cb_limcred], 
            T.cb_cheque AS [MCLIENTE.cb_cheque], 
            T.cb_sucursal AS [MCLIENTE.cb_sucursal], 
            T.cb_sector AS [MCLIENTE.cb_sector], 
            T.cb_activo AS [MCLIENTE.cb_activo], 
            T.dt_ultcomp AS [MCLIENTE.dt_ultcomp], 
            T.ct_legal AS [MCLIENTE.ct_legal], 
            T.cn_rucleg AS [MCLIENTE.cn_rucleg], 
            T.dt_ultdeuda AS [MCLIENTE.dt_ultdeuda], 
            T.fm_compmn AS [MCLIENTE.fm_compmn], 
            T.cd_direcleg AS [MCLIENTE.cd_direcleg], 
            T.fm_compme AS [MCLIENTE.fm_compme], 
            T.cn_telfleg AS [MCLIENTE.cn_telfleg], 
            T.fm_acummn AS [MCLIENTE.fm_acummn], 
            T.cn_faxleg AS [MCLIENTE.cn_faxleg], 
            T.fm_acumme AS [MCLIENTE.fm_acumme], 
            T.fm_saldomn AS [MCLIENTE.fm_saldomn], 
            T.fm_saldome AS [MCLIENTE.fm_saldome], 
            T.fq_descto AS [MCLIENTE.fq_descto], 
            T.fm_cantporc AS [MCLIENTE.fm_cantporc], 
            T.fm_desctomn AS [MCLIENTE.fm_desctomn], 
            T.fm_montporcmn AS [MCLIENTE.fm_montporcmn], 
            T.fm_desctome AS [MCLIENTE.fm_desctome], 
            T.fm_montporcme AS [MCLIENTE.fm_montporcme], 
            T.cb_cheqdif AS [MCLIENTE.cb_cheqdif], 
            T.fm_diferidomn AS [MCLIENTE.fm_diferidomn], 
            T.fm_diferidome AS [MCLIENTE.fm_diferidome], 
            T.cb_flete AS [MCLIENTE.cb_flete], 
            T.cb_embalaje AS [MCLIENTE.cb_embalaje], 
            T.cb_moncred AS [MCLIENTE.cb_moncred], 
            T.fm_limcred AS [MCLIENTE.fm_limcred], 
            T.cd_nomcom AS [MCLIENTE.cd_nomcom], 
            T.cd_appaterno AS [MCLIENTE.cd_appaterno], 
            T.cd_apmaterno AS [MCLIENTE.cd_apmaterno], 
            T.cd_nombre1 AS [MCLIENTE.cd_nombre1], 
            T.cd_nombre2 AS [MCLIENTE.cd_nombre2], 
            T.c_fl_agente_percepcion AS [MCLIENTE.c_fl_agente_percepcion], 
            T.cc_proyecto AS [MCLIENTE.cc_proyecto], 
            T.c_cod_documento_identidad AS [MCLIENTE.c_cod_documento_identidad], 
            T.c_fl_vinculacion AS [MCLIENTE.c_fl_vinculacion], 
            T.ct_email AS [MCLIENTE.ct_email], 
            True AS _from0
        FROM ZicoErpContext.Mclientes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TCONDVTA.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TCONDVTA
        [CodeFirstDatabaseSchema.TCONDVTA](T1.[TCONDVTA.cc_vta], T1.[TCONDVTA.cd_vta], T1.[TCONDVTA.fq_pond], T1.[TCONDVTA.fq_diasplazo], T1.[TCONDVTA.fm_porcmin], T1.[TCONDVTA.fm_porcmax], T1.[TCONDVTA.cb_gasto], T1.[TCONDVTA.fq_dias], T1.[TCONDVTA.fq_letras], T1.[TCONDVTA.cb_condvta], T1.[TCONDVTA.cb_no_fact], T1.[TCONDVTA.cb_todos])
    FROM (
        SELECT 
            T.cc_vta AS [TCONDVTA.cc_vta], 
            T.cd_vta AS [TCONDVTA.cd_vta], 
            T.fq_pond AS [TCONDVTA.fq_pond], 
            T.fq_diasplazo AS [TCONDVTA.fq_diasplazo], 
            T.fm_porcmin AS [TCONDVTA.fm_porcmin], 
            T.fm_porcmax AS [TCONDVTA.fm_porcmax], 
            T.cb_gasto AS [TCONDVTA.cb_gasto], 
            T.fq_dias AS [TCONDVTA.fq_dias], 
            T.fq_letras AS [TCONDVTA.fq_letras], 
            T.cb_condvta AS [TCONDVTA.cb_condvta], 
            T.cb_no_fact AS [TCONDVTA.cb_no_fact], 
            T.cb_todos AS [TCONDVTA.cb_todos], 
            True AS _from0
        FROM ZicoErpContext.Tcondvtas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TMONEDA.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TMONEDA
        [CodeFirstDatabaseSchema.TMONEDA](T1.[TMONEDA.cc_moneda], T1.[TMONEDA.cd_moneda], T1.[TMONEDA.cb_nac], T1.[TMONEDA.cd_simbolo], T1.[TMONEDA.cb_moncambio], T1.[TMONEDA.cb_indmon])
    FROM (
        SELECT 
            T.cc_moneda AS [TMONEDA.cc_moneda], 
            T.cd_moneda AS [TMONEDA.cd_moneda], 
            T.cb_nac AS [TMONEDA.cb_nac], 
            T.cd_simbolo AS [TMONEDA.cd_simbolo], 
            T.cb_moncambio AS [TMONEDA.cb_moncambio], 
            T.cb_indmon AS [TMONEDA.cb_indmon], 
            True AS _from0
        FROM ZicoErpContext.Tmonedas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TSUCCLIE.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TSUCCLIE
        [CodeFirstDatabaseSchema.TSUCCLIE](T1.[TSUCCLIE.cc_tipana], T1.[TSUCCLIE.cc_analis], T1.[TSUCCLIE.cn_suc], T1.[TSUCCLIE.cc_dpto], T1.[TSUCCLIE.cd_suc], T1.[TSUCCLIE.ct_email], T1.[TSUCCLIE.cc_prov], T1.[TSUCCLIE.cc_distrito], T1.[TSUCCLIE.cc_zona], T1.[TSUCCLIE.cd_direc], T1.[TSUCCLIE.cn_telf1], T1.[TSUCCLIE.cn_telf2], T1.[TSUCCLIE.cn_telf3], T1.[TSUCCLIE.cn_fax1], T1.[TSUCCLIE.cn_fax2], T1.[TSUCCLIE.cn_fax3], T1.[TSUCCLIE.cb_activo])
    FROM (
        SELECT 
            T.cc_tipana AS [TSUCCLIE.cc_tipana], 
            T.cc_analis AS [TSUCCLIE.cc_analis], 
            T.cn_suc AS [TSUCCLIE.cn_suc], 
            T.cc_dpto AS [TSUCCLIE.cc_dpto], 
            T.cd_suc AS [TSUCCLIE.cd_suc], 
            T.ct_email AS [TSUCCLIE.ct_email], 
            T.cc_prov AS [TSUCCLIE.cc_prov], 
            T.cc_distrito AS [TSUCCLIE.cc_distrito], 
            T.cc_zona AS [TSUCCLIE.cc_zona], 
            T.cd_direc AS [TSUCCLIE.cd_direc], 
            T.cn_telf1 AS [TSUCCLIE.cn_telf1], 
            T.cn_telf2 AS [TSUCCLIE.cn_telf2], 
            T.cn_telf3 AS [TSUCCLIE.cn_telf3], 
            T.cn_fax1 AS [TSUCCLIE.cn_fax1], 
            T.cn_fax2 AS [TSUCCLIE.cn_fax2], 
            T.cn_fax3 AS [TSUCCLIE.cn_fax3], 
            T.cb_activo AS [TSUCCLIE.cb_activo], 
            True AS _from0
        FROM ZicoErpContext.TSUCCLIEs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.LCPEDIDO_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LCPEDIDO_WEB
        [Acetesa.TomaPedidos.DataEntityFramework.Models.LCPEDIDO_WEB](T1.[LCPEDIDO_WEB.cn_pedido], T1.[LCPEDIDO_WEB.cn_proforma], T1.[LCPEDIDO_WEB.cc_tipana], T1.[LCPEDIDO_WEB.cc_analis], T1.[LCPEDIDO_WEB.cn_suc], T1.[LCPEDIDO_WEB.cd_razsoc], T1.[LCPEDIDO_WEB.cc_moneda], T1.[LCPEDIDO_WEB.cc_vta], T1.[LCPEDIDO_WEB.df_proceso], T1.[LCPEDIDO_WEB.df_emision], T1.[LCPEDIDO_WEB.fm_tipcam], T1.[LCPEDIDO_WEB.fm_valvta], T1.[LCPEDIDO_WEB.fm_igv], T1.[LCPEDIDO_WEB.fm_totvta], T1.[LCPEDIDO_WEB.cb_recojo], T1.[LCPEDIDO_WEB.cb_estado])
    FROM (
        SELECT 
            T.cn_pedido AS [LCPEDIDO_WEB.cn_pedido], 
            T.cn_proforma AS [LCPEDIDO_WEB.cn_proforma], 
            T.cc_tipana AS [LCPEDIDO_WEB.cc_tipana], 
            T.cc_analis AS [LCPEDIDO_WEB.cc_analis], 
            T.cn_suc AS [LCPEDIDO_WEB.cn_suc], 
            T.cd_razsoc AS [LCPEDIDO_WEB.cd_razsoc], 
            T.cc_moneda AS [LCPEDIDO_WEB.cc_moneda], 
            T.cc_vta AS [LCPEDIDO_WEB.cc_vta], 
            T.df_proceso AS [LCPEDIDO_WEB.df_proceso], 
            T.df_emision AS [LCPEDIDO_WEB.df_emision], 
            T.fm_tipcam AS [LCPEDIDO_WEB.fm_tipcam], 
            T.fm_valvta AS [LCPEDIDO_WEB.fm_valvta], 
            T.fm_igv AS [LCPEDIDO_WEB.fm_igv], 
            T.fm_totvta AS [LCPEDIDO_WEB.fm_totvta], 
            T.cb_recojo AS [LCPEDIDO_WEB.cb_recojo], 
            T.cb_estado AS [LCPEDIDO_WEB.cb_estado], 
            True AS _from0
        FROM CodeFirstDatabase.LCPEDIDO_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.LcprofWebs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LcprofWebs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.LCPROF_WEB](T1.[LCPROF_WEB.cn_proforma], T1.[LCPROF_WEB.cc_tipana], T1.[LCPROF_WEB.cc_analis], T1.[LCPROF_WEB.cd_razsoc], T1.[LCPROF_WEB.cc_moneda], T1.[LCPROF_WEB.cc_vta], T1.[LCPROF_WEB.df_proceso], T1.[LCPROF_WEB.df_emision], T1.[LCPROF_WEB.fm_tipcam], T1.[LCPROF_WEB.fm_valvta], T1.[LCPROF_WEB.fm_igv], T1.[LCPROF_WEB.fm_totvta], T1.[LCPROF_WEB.cb_estado], T1.[LCPROF_WEB.VisitaClienteID])
    FROM (
        SELECT 
            T.cn_proforma AS [LCPROF_WEB.cn_proforma], 
            T.cc_tipana AS [LCPROF_WEB.cc_tipana], 
            T.cc_analis AS [LCPROF_WEB.cc_analis], 
            T.cd_razsoc AS [LCPROF_WEB.cd_razsoc], 
            T.cc_moneda AS [LCPROF_WEB.cc_moneda], 
            T.cc_vta AS [LCPROF_WEB.cc_vta], 
            T.df_proceso AS [LCPROF_WEB.df_proceso], 
            T.df_emision AS [LCPROF_WEB.df_emision], 
            T.fm_tipcam AS [LCPROF_WEB.fm_tipcam], 
            T.fm_valvta AS [LCPROF_WEB.fm_valvta], 
            T.fm_igv AS [LCPROF_WEB.fm_igv], 
            T.fm_totvta AS [LCPROF_WEB.fm_totvta], 
            T.cb_estado AS [LCPROF_WEB.cb_estado], 
            T.VisitaClienteID AS [LCPROF_WEB.VisitaClienteID], 
            True AS _from0
        FROM CodeFirstDatabase.LCPROF_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.LdprofWebs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LdprofWebs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.LDPROF_WEB](T1.[LDPROF_WEB.cn_proforma], T1.[LDPROF_WEB.cn_item], T1.[LDPROF_WEB.cc_artic], T1.[LDPROF_WEB.fq_cantidad], T1.[LDPROF_WEB.fq_stock], T1.[LDPROF_WEB.cc_lista], T1.[LDPROF_WEB.fm_precio], T1.[LDPROF_WEB.fm_precio2], T1.[LDPROF_WEB.fm_precio_fin], T1.[LDPROF_WEB.fm_total], T1.[LDPROF_WEB.fq_peso])
    FROM (
        SELECT 
            T.cn_proforma AS [LDPROF_WEB.cn_proforma], 
            T.cn_item AS [LDPROF_WEB.cn_item], 
            T.cc_artic AS [LDPROF_WEB.cc_artic], 
            T.fq_cantidad AS [LDPROF_WEB.fq_cantidad], 
            T.fq_stock AS [LDPROF_WEB.fq_stock], 
            T.cc_lista AS [LDPROF_WEB.cc_lista], 
            T.fm_precio AS [LDPROF_WEB.fm_precio], 
            T.fm_precio2 AS [LDPROF_WEB.fm_precio2], 
            T.fm_precio_fin AS [LDPROF_WEB.fm_precio_fin], 
            T.fm_total AS [LDPROF_WEB.fm_total], 
            T.fq_peso AS [LDPROF_WEB.fq_peso], 
            True AS _from0
        FROM CodeFirstDatabase.LDPROF_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.MarticuLs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MarticuLs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.MARTICUL](T1.[MARTICUL.cc_artic], T1.[MARTICUL.cc_gruart], T1.[MARTICUL.cc_famiart], T1.[MARTICUL.cc_marca], T1.[MARTICUL.cc_gruartec], T1.[MARTICUL.cc_subgruart], T1.[MARTICUL.cc_modelo], T1.[MARTICUL.cd_artic], T1.[MARTICUL.cn_parara], T1.[MARTICUL.cd_artictc], T1.[MARTICUL.cc_unmed], T1.[MARTICUL.df_ultcom], T1.[MARTICUL.fm_ultcom], T1.[MARTICUL.df_ultven], T1.[MARTICUL.fm_ultven], T1.[MARTICUL.cb_undalt], T1.[MARTICUL.cb_activo], T1.[MARTICUL.cb_stocks], T1.[MARTICUL.fq_smin], T1.[MARTICUL.fq_smax], T1.[MARTICUL.fq_nivrepos], T1.[MARTICUL.cb_standard], T1.[MARTICUL.ci_consig], T1.[MARTICUL.cb_nacional], T1.[MARTICUL.cb_critico], T1.[MARTICUL.cb_obsleto], T1.[MARTICUL.cc_barras], T1.[MARTICUL.fm_precprom], T1.[MARTICUL.ct_graf], T1.[MARTICUL.fm_ulco_d], T1.[MARTICUL.fm_ulve_d], T1.[MARTICUL.fm_precprom_d], T1.[MARTICUL.ci_abc], T1.[MARTICUL.cb_catart], T1.[MARTICUL.fm_ultpu], T1.[MARTICUL.fm_ultpu_d], T1.[MARTICUL.fd_stock_cero], T1.[MARTICUL.fm_consumo], T1.[MARTICUL.fq_sinicial], T1.[MARTICUL.cb_estado], T1.[MARTICUL.cb_rotacion], T1.[MARTICUL.cn_partnumber], T1.[MARTICUL.cb_uso], T1.[MARTICUL.cn_item], T1.[MARTICUL.fq_embalaje], T1.[MARTICUL.cc_catalogo], T1.[MARTICUL.cc_tipoartic], T1.[MARTICUL.fq_espesor], T1.[MARTICUL.fq_ancho], T1.[MARTICUL.fq_largo], T1.[MARTICUL.cc_costeo], T1.[MARTICUL.cb_eval_precio], T1.[MARTICUL.cc_tipArt], T1.[MARTICUL.cc_costo_kardexpaqbobi], T1.[MARTICUL.df_creacion], T1.[MARTICUL.fq_sku], T1.[MARTICUL.cc_articant], T1.[MARTICUL.cc_color], T1.[MARTICUL.cb_peso_pt], T1.[MARTICUL.cb_mprima], T1.[MARTICUL.cc_simbolo], T1.[MARTICUL.cc_costeo_pocl], T1.[MARTICUL.cc_codpeso], T1.[MARTICUL.cc_gruartecduf], T1.[MARTICUL.cc_subgruartduf], T1.[MARTICUL.c_fl_afecto_percepcion], T1.[MARTICUL.fq_peso_teorico])
    FROM (
        SELECT 
            T.cc_artic AS [MARTICUL.cc_artic], 
            T.cc_gruart AS [MARTICUL.cc_gruart], 
            T.cc_famiart AS [MARTICUL.cc_famiart], 
            T.cc_marca AS [MARTICUL.cc_marca], 
            T.cc_gruartec AS [MARTICUL.cc_gruartec], 
            T.cc_subgruart AS [MARTICUL.cc_subgruart], 
            T.cc_modelo AS [MARTICUL.cc_modelo], 
            T.cd_artic AS [MARTICUL.cd_artic], 
            T.cn_parara AS [MARTICUL.cn_parara], 
            T.cd_artictc AS [MARTICUL.cd_artictc], 
            T.cc_unmed AS [MARTICUL.cc_unmed], 
            T.df_ultcom AS [MARTICUL.df_ultcom], 
            T.fm_ultcom AS [MARTICUL.fm_ultcom], 
            T.df_ultven AS [MARTICUL.df_ultven], 
            T.fm_ultven AS [MARTICUL.fm_ultven], 
            T.cb_undalt AS [MARTICUL.cb_undalt], 
            T.cb_activo AS [MARTICUL.cb_activo], 
            T.cb_stocks AS [MARTICUL.cb_stocks], 
            T.fq_smin AS [MARTICUL.fq_smin], 
            T.fq_smax AS [MARTICUL.fq_smax], 
            T.fq_nivrepos AS [MARTICUL.fq_nivrepos], 
            T.cb_standard AS [MARTICUL.cb_standard], 
            T.ci_consig AS [MARTICUL.ci_consig], 
            T.cb_nacional AS [MARTICUL.cb_nacional], 
            T.cb_critico AS [MARTICUL.cb_critico], 
            T.cb_obsleto AS [MARTICUL.cb_obsleto], 
            T.cc_barras AS [MARTICUL.cc_barras], 
            T.fm_precprom AS [MARTICUL.fm_precprom], 
            T.ct_graf AS [MARTICUL.ct_graf], 
            T.fm_ulco_d AS [MARTICUL.fm_ulco_d], 
            T.fm_ulve_d AS [MARTICUL.fm_ulve_d], 
            T.fm_precprom_d AS [MARTICUL.fm_precprom_d], 
            T.ci_abc AS [MARTICUL.ci_abc], 
            T.cb_catart AS [MARTICUL.cb_catart], 
            T.fm_ultpu AS [MARTICUL.fm_ultpu], 
            T.fm_ultpu_d AS [MARTICUL.fm_ultpu_d], 
            T.fd_stock_cero AS [MARTICUL.fd_stock_cero], 
            T.fm_consumo AS [MARTICUL.fm_consumo], 
            T.fq_sinicial AS [MARTICUL.fq_sinicial], 
            T.cb_estado AS [MARTICUL.cb_estado], 
            T.cb_rotacion AS [MARTICUL.cb_rotacion], 
            T.cn_partnumber AS [MARTICUL.cn_partnumber], 
            T.cb_uso AS [MARTICUL.cb_uso], 
            T.cn_item AS [MARTICUL.cn_item], 
            T.fq_embalaje AS [MARTICUL.fq_embalaje], 
            T.cc_catalogo AS [MARTICUL.cc_catalogo], 
            T.cc_tipoartic AS [MARTICUL.cc_tipoartic], 
            T.fq_espesor AS [MARTICUL.fq_espesor], 
            T.fq_ancho AS [MARTICUL.fq_ancho], 
            T.fq_largo AS [MARTICUL.fq_largo], 
            T.cc_costeo AS [MARTICUL.cc_costeo], 
            T.cb_eval_precio AS [MARTICUL.cb_eval_precio], 
            T.cc_tipArt AS [MARTICUL.cc_tipArt], 
            T.cc_costo_kardexpaqbobi AS [MARTICUL.cc_costo_kardexpaqbobi], 
            T.df_creacion AS [MARTICUL.df_creacion], 
            T.fq_sku AS [MARTICUL.fq_sku], 
            T.cc_articant AS [MARTICUL.cc_articant], 
            T.cc_color AS [MARTICUL.cc_color], 
            T.cb_peso_pt AS [MARTICUL.cb_peso_pt], 
            T.cb_mprima AS [MARTICUL.cb_mprima], 
            T.cc_simbolo AS [MARTICUL.cc_simbolo], 
            T.cc_costeo_pocl AS [MARTICUL.cc_costeo_pocl], 
            T.cc_codpeso AS [MARTICUL.cc_codpeso], 
            T.cc_gruartecduf AS [MARTICUL.cc_gruartecduf], 
            T.cc_subgruartduf AS [MARTICUL.cc_subgruartduf], 
            T.c_fl_afecto_percepcion AS [MARTICUL.c_fl_afecto_percepcion], 
            T.fq_peso_teorico AS [MARTICUL.fq_peso_teorico], 
            True AS _from0
        FROM CodeFirstDatabase.MARTICUL AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.LDPEDIDO_WEB.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LDPEDIDO_WEB
        [Acetesa.TomaPedidos.DataEntityFramework.Models.LDPEDIDO_WEB](T1.[LDPEDIDO_WEB.cn_pedido], T1.[LDPEDIDO_WEB.cn_item], T1.[LDPEDIDO_WEB.cc_artic], T1.[LDPEDIDO_WEB.fq_cantidad], T1.[LDPEDIDO_WEB.fq_peso], T1.[LDPEDIDO_WEB.fq_stock], T1.[LDPEDIDO_WEB.cc_lista], T1.[LDPEDIDO_WEB.fm_precio], T1.[LDPEDIDO_WEB.fm_precio2], T1.[LDPEDIDO_WEB.fm_precio_fin], T1.[LDPEDIDO_WEB.fm_total])
    FROM (
        SELECT 
            T.cn_pedido AS [LDPEDIDO_WEB.cn_pedido], 
            T.cn_item AS [LDPEDIDO_WEB.cn_item], 
            T.cc_artic AS [LDPEDIDO_WEB.cc_artic], 
            T.fq_cantidad AS [LDPEDIDO_WEB.fq_cantidad], 
            T.fq_peso AS [LDPEDIDO_WEB.fq_peso], 
            T.fq_stock AS [LDPEDIDO_WEB.fq_stock], 
            T.cc_lista AS [LDPEDIDO_WEB.cc_lista], 
            T.fm_precio AS [LDPEDIDO_WEB.fm_precio], 
            T.fm_precio2 AS [LDPEDIDO_WEB.fm_precio2], 
            T.fm_precio_fin AS [LDPEDIDO_WEB.fm_precio_fin], 
            T.fm_total AS [LDPEDIDO_WEB.fm_total], 
            True AS _from0
        FROM CodeFirstDatabase.LDPEDIDO_WEB AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Tlistaprecios.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tlistaprecios
        [Acetesa.TomaPedidos.DataEntityFramework.Models.TLISTAPRECIO](T1.[TLISTAPRECIO.cc_artic], T1.[TLISTAPRECIO.cc_lista], T1.[TLISTAPRECIO.fm_preciounit], T1.[TLISTAPRECIO.cc_moneda], T1.[TLISTAPRECIO.fm_costounit], T1.[TLISTAPRECIO.fm_dcto1], T1.[TLISTAPRECIO.fm_dcto2], T1.[TLISTAPRECIO.cb_estado], T1.[TLISTAPRECIO.cc_destino], T1.[TLISTAPRECIO.fm_preciounit_ant], T1.[TLISTAPRECIO.c_fl_afecto_percepcion])
    FROM (
        SELECT 
            T.cc_artic AS [TLISTAPRECIO.cc_artic], 
            T.cc_lista AS [TLISTAPRECIO.cc_lista], 
            T.fm_preciounit AS [TLISTAPRECIO.fm_preciounit], 
            T.cc_moneda AS [TLISTAPRECIO.cc_moneda], 
            T.fm_costounit AS [TLISTAPRECIO.fm_costounit], 
            T.fm_dcto1 AS [TLISTAPRECIO.fm_dcto1], 
            T.fm_dcto2 AS [TLISTAPRECIO.fm_dcto2], 
            T.cb_estado AS [TLISTAPRECIO.cb_estado], 
            T.cc_destino AS [TLISTAPRECIO.cc_destino], 
            T.fm_preciounit_ant AS [TLISTAPRECIO.fm_preciounit_ant], 
            T.c_fl_afecto_percepcion AS [TLISTAPRECIO.c_fl_afecto_percepcion], 
            True AS _from0
        FROM CodeFirstDatabase.TLISTAPRECIO AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Mclientes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Mclientes
        [Acetesa.TomaPedidos.DataEntityFramework.Models.MCLIENTE](T1.[MCLIENTE.cc_tipana], T1.[MCLIENTE.cc_analis], T1.[MCLIENTE.cc_pais], T1.[MCLIENTE.cc_dpto], T1.[MCLIENTE.cc_prov], T1.[MCLIENTE.cc_sector], T1.[MCLIENTE.cc_catclie], T1.[MCLIENTE.cc_distrito], T1.[MCLIENTE.cd_razsoc], T1.[MCLIENTE.cc_zona], T1.[MCLIENTE.cb_proced], T1.[MCLIENTE.cd_direc], T1.[MCLIENTE.cn_regind], T1.[MCLIENTE.cn_sanit], T1.[MCLIENTE.cn_regmerc], T1.[MCLIENTE.ct_giro], T1.[MCLIENTE.dt_constit], T1.[MCLIENTE.dt_registro], T1.[MCLIENTE.cn_telf1], T1.[MCLIENTE.cn_telf2], T1.[MCLIENTE.cn_telf3], T1.[MCLIENTE.cn_fax1], T1.[MCLIENTE.cn_fax2], T1.[MCLIENTE.cn_fax3], T1.[MCLIENTE.cb_monfac], T1.[MCLIENTE.cb_limcred], T1.[MCLIENTE.cb_cheque], T1.[MCLIENTE.cb_sucursal], T1.[MCLIENTE.cb_sector], T1.[MCLIENTE.cb_activo], T1.[MCLIENTE.dt_ultcomp], T1.[MCLIENTE.ct_legal], T1.[MCLIENTE.cn_rucleg], T1.[MCLIENTE.dt_ultdeuda], T1.[MCLIENTE.fm_compmn], T1.[MCLIENTE.cd_direcleg], T1.[MCLIENTE.fm_compme], T1.[MCLIENTE.cn_telfleg], T1.[MCLIENTE.fm_acummn], T1.[MCLIENTE.cn_faxleg], T1.[MCLIENTE.fm_acumme], T1.[MCLIENTE.fm_saldomn], T1.[MCLIENTE.fm_saldome], T1.[MCLIENTE.fq_descto], T1.[MCLIENTE.fm_cantporc], T1.[MCLIENTE.fm_desctomn], T1.[MCLIENTE.fm_montporcmn], T1.[MCLIENTE.fm_desctome], T1.[MCLIENTE.fm_montporcme], T1.[MCLIENTE.cb_cheqdif], T1.[MCLIENTE.fm_diferidomn], T1.[MCLIENTE.fm_diferidome], T1.[MCLIENTE.cb_flete], T1.[MCLIENTE.cb_embalaje], T1.[MCLIENTE.cb_moncred], T1.[MCLIENTE.fm_limcred], T1.[MCLIENTE.cd_nomcom], T1.[MCLIENTE.cd_appaterno], T1.[MCLIENTE.cd_apmaterno], T1.[MCLIENTE.cd_nombre1], T1.[MCLIENTE.cd_nombre2], T1.[MCLIENTE.c_fl_agente_percepcion], T1.[MCLIENTE.cc_proyecto], T1.[MCLIENTE.c_cod_documento_identidad], T1.[MCLIENTE.c_fl_vinculacion], T1.[MCLIENTE.ct_email])
    FROM (
        SELECT 
            T.cc_tipana AS [MCLIENTE.cc_tipana], 
            T.cc_analis AS [MCLIENTE.cc_analis], 
            T.cc_pais AS [MCLIENTE.cc_pais], 
            T.cc_dpto AS [MCLIENTE.cc_dpto], 
            T.cc_prov AS [MCLIENTE.cc_prov], 
            T.cc_sector AS [MCLIENTE.cc_sector], 
            T.cc_catclie AS [MCLIENTE.cc_catclie], 
            T.cc_distrito AS [MCLIENTE.cc_distrito], 
            T.cd_razsoc AS [MCLIENTE.cd_razsoc], 
            T.cc_zona AS [MCLIENTE.cc_zona], 
            T.cb_proced AS [MCLIENTE.cb_proced], 
            T.cd_direc AS [MCLIENTE.cd_direc], 
            T.cn_regind AS [MCLIENTE.cn_regind], 
            T.cn_sanit AS [MCLIENTE.cn_sanit], 
            T.cn_regmerc AS [MCLIENTE.cn_regmerc], 
            T.ct_giro AS [MCLIENTE.ct_giro], 
            T.dt_constit AS [MCLIENTE.dt_constit], 
            T.dt_registro AS [MCLIENTE.dt_registro], 
            T.cn_telf1 AS [MCLIENTE.cn_telf1], 
            T.cn_telf2 AS [MCLIENTE.cn_telf2], 
            T.cn_telf3 AS [MCLIENTE.cn_telf3], 
            T.cn_fax1 AS [MCLIENTE.cn_fax1], 
            T.cn_fax2 AS [MCLIENTE.cn_fax2], 
            T.cn_fax3 AS [MCLIENTE.cn_fax3], 
            T.cb_monfac AS [MCLIENTE.cb_monfac], 
            T.cb_limcred AS [MCLIENTE.cb_limcred], 
            T.cb_cheque AS [MCLIENTE.cb_cheque], 
            T.cb_sucursal AS [MCLIENTE.cb_sucursal], 
            T.cb_sector AS [MCLIENTE.cb_sector], 
            T.cb_activo AS [MCLIENTE.cb_activo], 
            T.dt_ultcomp AS [MCLIENTE.dt_ultcomp], 
            T.ct_legal AS [MCLIENTE.ct_legal], 
            T.cn_rucleg AS [MCLIENTE.cn_rucleg], 
            T.dt_ultdeuda AS [MCLIENTE.dt_ultdeuda], 
            T.fm_compmn AS [MCLIENTE.fm_compmn], 
            T.cd_direcleg AS [MCLIENTE.cd_direcleg], 
            T.fm_compme AS [MCLIENTE.fm_compme], 
            T.cn_telfleg AS [MCLIENTE.cn_telfleg], 
            T.fm_acummn AS [MCLIENTE.fm_acummn], 
            T.cn_faxleg AS [MCLIENTE.cn_faxleg], 
            T.fm_acumme AS [MCLIENTE.fm_acumme], 
            T.fm_saldomn AS [MCLIENTE.fm_saldomn], 
            T.fm_saldome AS [MCLIENTE.fm_saldome], 
            T.fq_descto AS [MCLIENTE.fq_descto], 
            T.fm_cantporc AS [MCLIENTE.fm_cantporc], 
            T.fm_desctomn AS [MCLIENTE.fm_desctomn], 
            T.fm_montporcmn AS [MCLIENTE.fm_montporcmn], 
            T.fm_desctome AS [MCLIENTE.fm_desctome], 
            T.fm_montporcme AS [MCLIENTE.fm_montporcme], 
            T.cb_cheqdif AS [MCLIENTE.cb_cheqdif], 
            T.fm_diferidomn AS [MCLIENTE.fm_diferidomn], 
            T.fm_diferidome AS [MCLIENTE.fm_diferidome], 
            T.cb_flete AS [MCLIENTE.cb_flete], 
            T.cb_embalaje AS [MCLIENTE.cb_embalaje], 
            T.cb_moncred AS [MCLIENTE.cb_moncred], 
            T.fm_limcred AS [MCLIENTE.fm_limcred], 
            T.cd_nomcom AS [MCLIENTE.cd_nomcom], 
            T.cd_appaterno AS [MCLIENTE.cd_appaterno], 
            T.cd_apmaterno AS [MCLIENTE.cd_apmaterno], 
            T.cd_nombre1 AS [MCLIENTE.cd_nombre1], 
            T.cd_nombre2 AS [MCLIENTE.cd_nombre2], 
            T.c_fl_agente_percepcion AS [MCLIENTE.c_fl_agente_percepcion], 
            T.cc_proyecto AS [MCLIENTE.cc_proyecto], 
            T.c_cod_documento_identidad AS [MCLIENTE.c_cod_documento_identidad], 
            T.c_fl_vinculacion AS [MCLIENTE.c_fl_vinculacion], 
            T.ct_email AS [MCLIENTE.ct_email], 
            True AS _from0
        FROM CodeFirstDatabase.MCLIENTE AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Tcondvtas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tcondvtas
        [Acetesa.TomaPedidos.DataEntityFramework.Models.TCONDVTA](T1.[TCONDVTA.cc_vta], T1.[TCONDVTA.cd_vta], T1.[TCONDVTA.fq_pond], T1.[TCONDVTA.fq_diasplazo], T1.[TCONDVTA.fm_porcmin], T1.[TCONDVTA.fm_porcmax], T1.[TCONDVTA.cb_gasto], T1.[TCONDVTA.fq_dias], T1.[TCONDVTA.fq_letras], T1.[TCONDVTA.cb_condvta], T1.[TCONDVTA.cb_no_fact], T1.[TCONDVTA.cb_todos])
    FROM (
        SELECT 
            T.cc_vta AS [TCONDVTA.cc_vta], 
            T.cd_vta AS [TCONDVTA.cd_vta], 
            T.fq_pond AS [TCONDVTA.fq_pond], 
            T.fq_diasplazo AS [TCONDVTA.fq_diasplazo], 
            T.fm_porcmin AS [TCONDVTA.fm_porcmin], 
            T.fm_porcmax AS [TCONDVTA.fm_porcmax], 
            T.cb_gasto AS [TCONDVTA.cb_gasto], 
            T.fq_dias AS [TCONDVTA.fq_dias], 
            T.fq_letras AS [TCONDVTA.fq_letras], 
            T.cb_condvta AS [TCONDVTA.cb_condvta], 
            T.cb_no_fact AS [TCONDVTA.cb_no_fact], 
            T.cb_todos AS [TCONDVTA.cb_todos], 
            True AS _from0
        FROM CodeFirstDatabase.TCONDVTA AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Tmonedas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tmonedas
        [Acetesa.TomaPedidos.DataEntityFramework.Models.TMONEDA](T1.[TMONEDA.cc_moneda], T1.[TMONEDA.cd_moneda], T1.[TMONEDA.cb_nac], T1.[TMONEDA.cd_simbolo], T1.[TMONEDA.cb_moncambio], T1.[TMONEDA.cb_indmon])
    FROM (
        SELECT 
            T.cc_moneda AS [TMONEDA.cc_moneda], 
            T.cd_moneda AS [TMONEDA.cd_moneda], 
            T.cb_nac AS [TMONEDA.cb_nac], 
            T.cd_simbolo AS [TMONEDA.cd_simbolo], 
            T.cb_moncambio AS [TMONEDA.cb_moncambio], 
            T.cb_indmon AS [TMONEDA.cb_indmon], 
            True AS _from0
        FROM CodeFirstDatabase.TMONEDA AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TSUCCLIEs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TSUCCLIEs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.TSUCCLIE](T1.[TSUCCLIE.cc_tipana], T1.[TSUCCLIE.cc_analis], T1.[TSUCCLIE.cn_suc], T1.[TSUCCLIE.cc_dpto], T1.[TSUCCLIE.cd_suc], T1.[TSUCCLIE.ct_email], T1.[TSUCCLIE.cc_prov], T1.[TSUCCLIE.cc_distrito], T1.[TSUCCLIE.cc_zona], T1.[TSUCCLIE.cd_direc], T1.[TSUCCLIE.cn_telf1], T1.[TSUCCLIE.cn_telf2], T1.[TSUCCLIE.cn_telf3], T1.[TSUCCLIE.cn_fax1], T1.[TSUCCLIE.cn_fax2], T1.[TSUCCLIE.cn_fax3], T1.[TSUCCLIE.cb_activo])
    FROM (
        SELECT 
            T.cc_tipana AS [TSUCCLIE.cc_tipana], 
            T.cc_analis AS [TSUCCLIE.cc_analis], 
            T.cn_suc AS [TSUCCLIE.cn_suc], 
            T.cc_dpto AS [TSUCCLIE.cc_dpto], 
            T.cd_suc AS [TSUCCLIE.cd_suc], 
            T.ct_email AS [TSUCCLIE.ct_email], 
            T.cc_prov AS [TSUCCLIE.cc_prov], 
            T.cc_distrito AS [TSUCCLIE.cc_distrito], 
            T.cc_zona AS [TSUCCLIE.cc_zona], 
            T.cd_direc AS [TSUCCLIE.cd_direc], 
            T.cn_telf1 AS [TSUCCLIE.cn_telf1], 
            T.cn_telf2 AS [TSUCCLIE.cn_telf2], 
            T.cn_telf3 AS [TSUCCLIE.cn_telf3], 
            T.cn_fax1 AS [TSUCCLIE.cn_fax1], 
            T.cn_fax2 AS [TSUCCLIE.cn_fax2], 
            T.cn_fax3 AS [TSUCCLIE.cn_fax3], 
            T.cb_activo AS [TSUCCLIE.cb_activo], 
            True AS _from0
        FROM CodeFirstDatabase.TSUCCLIE AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Lkardex.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Lkardex
        [CodeFirstDatabaseSchema.Lkardex](T1.[Lkardex.cc_kardex], T1.[Lkardex.cc_artic], T1.[Lkardex.cc_almac], T1.[Lkardex.ni_corre], T1.[Lkardex.df_kardex], T1.[Lkardex.nq_artic], T1.[Lkardex.fm_artic], T1.[Lkardex.fm_artic_d], T1.[Lkardex.cb_tipo], T1.[Lkardex.fm_ultpu], T1.[Lkardex.fm_ultpu_d], T1.[Lkardex.cc_notsal], T1.[Lkardex.cc_noting], T1.[Lkardex.cb_estado], T1.[Lkardex.fm_costo_prom], T1.[Lkardex.fm_costo_prom_d], T1.[Lkardex.cn_artxpaq], T1.[Lkardex.cc_movi], T1.[Lkardex.cb_servicio])
    FROM (
        SELECT 
            T.cc_kardex AS [Lkardex.cc_kardex], 
            T.cc_artic AS [Lkardex.cc_artic], 
            T.cc_almac AS [Lkardex.cc_almac], 
            T.ni_corre AS [Lkardex.ni_corre], 
            T.df_kardex AS [Lkardex.df_kardex], 
            T.nq_artic AS [Lkardex.nq_artic], 
            T.fm_artic AS [Lkardex.fm_artic], 
            T.fm_artic_d AS [Lkardex.fm_artic_d], 
            T.cb_tipo AS [Lkardex.cb_tipo], 
            T.fm_ultpu AS [Lkardex.fm_ultpu], 
            T.fm_ultpu_d AS [Lkardex.fm_ultpu_d], 
            T.cc_notsal AS [Lkardex.cc_notsal], 
            T.cc_noting AS [Lkardex.cc_noting], 
            T.cb_estado AS [Lkardex.cb_estado], 
            T.fm_costo_prom AS [Lkardex.fm_costo_prom], 
            T.fm_costo_prom_d AS [Lkardex.fm_costo_prom_d], 
            T.cn_artxpaq AS [Lkardex.cn_artxpaq], 
            T.cc_movi AS [Lkardex.cc_movi], 
            T.cb_servicio AS [Lkardex.cb_servicio], 
            True AS _from0
        FROM ZicoErpContext.LkardeXes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.LkardeXes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LkardeXes
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Lkardex](T1.[Lkardex.cc_kardex], T1.[Lkardex.cc_artic], T1.[Lkardex.cc_almac], T1.[Lkardex.ni_corre], T1.[Lkardex.df_kardex], T1.[Lkardex.nq_artic], T1.[Lkardex.fm_artic], T1.[Lkardex.fm_artic_d], T1.[Lkardex.cb_tipo], T1.[Lkardex.fm_ultpu], T1.[Lkardex.fm_ultpu_d], T1.[Lkardex.cc_notsal], T1.[Lkardex.cc_noting], T1.[Lkardex.cb_estado], T1.[Lkardex.fm_costo_prom], T1.[Lkardex.fm_costo_prom_d], T1.[Lkardex.cn_artxpaq], T1.[Lkardex.cc_movi], T1.[Lkardex.cb_servicio])
    FROM (
        SELECT 
            T.cc_kardex AS [Lkardex.cc_kardex], 
            T.cc_artic AS [Lkardex.cc_artic], 
            T.cc_almac AS [Lkardex.cc_almac], 
            T.ni_corre AS [Lkardex.ni_corre], 
            T.df_kardex AS [Lkardex.df_kardex], 
            T.nq_artic AS [Lkardex.nq_artic], 
            T.fm_artic AS [Lkardex.fm_artic], 
            T.fm_artic_d AS [Lkardex.fm_artic_d], 
            T.cb_tipo AS [Lkardex.cb_tipo], 
            T.fm_ultpu AS [Lkardex.fm_ultpu], 
            T.fm_ultpu_d AS [Lkardex.fm_ultpu_d], 
            T.cc_notsal AS [Lkardex.cc_notsal], 
            T.cc_noting AS [Lkardex.cc_noting], 
            T.cb_estado AS [Lkardex.cb_estado], 
            T.fm_costo_prom AS [Lkardex.fm_costo_prom], 
            T.fm_costo_prom_d AS [Lkardex.fm_costo_prom_d], 
            T.cn_artxpaq AS [Lkardex.cn_artxpaq], 
            T.cc_movi AS [Lkardex.cc_movi], 
            T.cb_servicio AS [Lkardex.cb_servicio], 
            True AS _from0
        FROM CodeFirstDatabase.Lkardex AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sarticxalmacen.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sarticxalmacen
        [CodeFirstDatabaseSchema.Sarticxalmacen](T1.[Sarticxalmacen.cc_anho], T1.[Sarticxalmacen.cc_mes], T1.[Sarticxalmacen.cc_artic], T1.[Sarticxalmacen.cc_locac], T1.[Sarticxalmacen.cc_almac], T1.[Sarticxalmacen.fq_saldo_inicial], T1.[Sarticxalmacen.fq_ingresos], T1.[Sarticxalmacen.fq_egresos], T1.[Sarticxalmacen.fq_saldo_final], T1.[Sarticxalmacen.fm_monto_ing_nac], T1.[Sarticxalmacen.fm_monto_sal_nac], T1.[Sarticxalmacen.fm_monto_ing_ext], T1.[Sarticxalmacen.fm_monto_sal_ext], T1.[Sarticxalmacen.fm_costo_prom_nac], T1.[Sarticxalmacen.fm_costo_prom_ext], T1.[Sarticxalmacen.fm_saldo_nac], T1.[Sarticxalmacen.fm_saldo_ext], T1.[Sarticxalmacen.fm_saldo_final_nac], T1.[Sarticxalmacen.fm_saldo_final_ext], T1.[Sarticxalmacen.fm_costo_nac], T1.[Sarticxalmacen.fm_costo_ext], T1.[Sarticxalmacen.fm_monto_ajus_nac], T1.[Sarticxalmacen.fm_monto_ajus_ext], T1.[Sarticxalmacen.fm_saldo_ant_ajus_nac], T1.[Sarticxalmacen.fm_saldo_ant_ajus_ext])
    FROM (
        SELECT 
            T.cc_anho AS [Sarticxalmacen.cc_anho], 
            T.cc_mes AS [Sarticxalmacen.cc_mes], 
            T.cc_artic AS [Sarticxalmacen.cc_artic], 
            T.cc_locac AS [Sarticxalmacen.cc_locac], 
            T.cc_almac AS [Sarticxalmacen.cc_almac], 
            T.fq_saldo_inicial AS [Sarticxalmacen.fq_saldo_inicial], 
            T.fq_ingresos AS [Sarticxalmacen.fq_ingresos], 
            T.fq_egresos AS [Sarticxalmacen.fq_egresos], 
            T.fq_saldo_final AS [Sarticxalmacen.fq_saldo_final], 
            T.fm_monto_ing_nac AS [Sarticxalmacen.fm_monto_ing_nac], 
            T.fm_monto_sal_nac AS [Sarticxalmacen.fm_monto_sal_nac], 
            T.fm_monto_ing_ext AS [Sarticxalmacen.fm_monto_ing_ext], 
            T.fm_monto_sal_ext AS [Sarticxalmacen.fm_monto_sal_ext], 
            T.fm_costo_prom_nac AS [Sarticxalmacen.fm_costo_prom_nac], 
            T.fm_costo_prom_ext AS [Sarticxalmacen.fm_costo_prom_ext], 
            T.fm_saldo_nac AS [Sarticxalmacen.fm_saldo_nac], 
            T.fm_saldo_ext AS [Sarticxalmacen.fm_saldo_ext], 
            T.fm_saldo_final_nac AS [Sarticxalmacen.fm_saldo_final_nac], 
            T.fm_saldo_final_ext AS [Sarticxalmacen.fm_saldo_final_ext], 
            T.fm_costo_nac AS [Sarticxalmacen.fm_costo_nac], 
            T.fm_costo_ext AS [Sarticxalmacen.fm_costo_ext], 
            T.fm_monto_ajus_nac AS [Sarticxalmacen.fm_monto_ajus_nac], 
            T.fm_monto_ajus_ext AS [Sarticxalmacen.fm_monto_ajus_ext], 
            T.fm_saldo_ant_ajus_nac AS [Sarticxalmacen.fm_saldo_ant_ajus_nac], 
            T.fm_saldo_ant_ajus_ext AS [Sarticxalmacen.fm_saldo_ant_ajus_ext], 
            True AS _from0
        FROM ZicoErpContext.SarticxalmaceNs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.SarticxalmaceNs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SarticxalmaceNs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Sarticxalmacen](T1.[Sarticxalmacen.cc_anho], T1.[Sarticxalmacen.cc_mes], T1.[Sarticxalmacen.cc_artic], T1.[Sarticxalmacen.cc_locac], T1.[Sarticxalmacen.cc_almac], T1.[Sarticxalmacen.fq_saldo_inicial], T1.[Sarticxalmacen.fq_ingresos], T1.[Sarticxalmacen.fq_egresos], T1.[Sarticxalmacen.fq_saldo_final], T1.[Sarticxalmacen.fm_monto_ing_nac], T1.[Sarticxalmacen.fm_monto_sal_nac], T1.[Sarticxalmacen.fm_monto_ing_ext], T1.[Sarticxalmacen.fm_monto_sal_ext], T1.[Sarticxalmacen.fm_costo_prom_nac], T1.[Sarticxalmacen.fm_costo_prom_ext], T1.[Sarticxalmacen.fm_saldo_nac], T1.[Sarticxalmacen.fm_saldo_ext], T1.[Sarticxalmacen.fm_saldo_final_nac], T1.[Sarticxalmacen.fm_saldo_final_ext], T1.[Sarticxalmacen.fm_costo_nac], T1.[Sarticxalmacen.fm_costo_ext], T1.[Sarticxalmacen.fm_monto_ajus_nac], T1.[Sarticxalmacen.fm_monto_ajus_ext], T1.[Sarticxalmacen.fm_saldo_ant_ajus_nac], T1.[Sarticxalmacen.fm_saldo_ant_ajus_ext])
    FROM (
        SELECT 
            T.cc_anho AS [Sarticxalmacen.cc_anho], 
            T.cc_mes AS [Sarticxalmacen.cc_mes], 
            T.cc_artic AS [Sarticxalmacen.cc_artic], 
            T.cc_locac AS [Sarticxalmacen.cc_locac], 
            T.cc_almac AS [Sarticxalmacen.cc_almac], 
            T.fq_saldo_inicial AS [Sarticxalmacen.fq_saldo_inicial], 
            T.fq_ingresos AS [Sarticxalmacen.fq_ingresos], 
            T.fq_egresos AS [Sarticxalmacen.fq_egresos], 
            T.fq_saldo_final AS [Sarticxalmacen.fq_saldo_final], 
            T.fm_monto_ing_nac AS [Sarticxalmacen.fm_monto_ing_nac], 
            T.fm_monto_sal_nac AS [Sarticxalmacen.fm_monto_sal_nac], 
            T.fm_monto_ing_ext AS [Sarticxalmacen.fm_monto_ing_ext], 
            T.fm_monto_sal_ext AS [Sarticxalmacen.fm_monto_sal_ext], 
            T.fm_costo_prom_nac AS [Sarticxalmacen.fm_costo_prom_nac], 
            T.fm_costo_prom_ext AS [Sarticxalmacen.fm_costo_prom_ext], 
            T.fm_saldo_nac AS [Sarticxalmacen.fm_saldo_nac], 
            T.fm_saldo_ext AS [Sarticxalmacen.fm_saldo_ext], 
            T.fm_saldo_final_nac AS [Sarticxalmacen.fm_saldo_final_nac], 
            T.fm_saldo_final_ext AS [Sarticxalmacen.fm_saldo_final_ext], 
            T.fm_costo_nac AS [Sarticxalmacen.fm_costo_nac], 
            T.fm_costo_ext AS [Sarticxalmacen.fm_costo_ext], 
            T.fm_monto_ajus_nac AS [Sarticxalmacen.fm_monto_ajus_nac], 
            T.fm_monto_ajus_ext AS [Sarticxalmacen.fm_monto_ajus_ext], 
            T.fm_saldo_ant_ajus_nac AS [Sarticxalmacen.fm_saldo_ant_ajus_nac], 
            T.fm_saldo_ant_ajus_ext AS [Sarticxalmacen.fm_saldo_ant_ajus_ext], 
            True AS _from0
        FROM CodeFirstDatabase.Sarticxalmacen AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Talmacen.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Talmacen
        [CodeFirstDatabaseSchema.Talmacen](T1.[Talmacen.cc_almac], T1.[Talmacen.cc_tipana], T1.[Talmacen.cc_locac], T1.[Talmacen.cc_analis], T1.[Talmacen.cc_cta], T1.[Talmacen.cc_encar1], T1.[Talmacen.cc_encar2], T1.[Talmacen.cc_catalm], T1.[Talmacen.cd_direc], T1.[Talmacen.cb_princ], T1.[Talmacen.ci_activo], T1.[Talmacen.fn_areas], T1.[Talmacen.fn_zonas], T1.[Talmacen.fn_anaq], T1.[Talmacen.fn_and], T1.[Talmacen.fn_casil], T1.[Talmacen.fm_presup], T1.[Talmacen.fm_por_presup], T1.[Talmacen.cc_prefijo], T1.[Talmacen.cb_estado], T1.[Talmacen.cd_direccion], T1.[Talmacen.cc_ubic_generic], T1.[Talmacen.cc_tienda], T1.[Talmacen.cb_valorizar], T1.[Talmacen.cod_establecimiento])
    FROM (
        SELECT 
            T.cc_almac AS [Talmacen.cc_almac], 
            T.cc_tipana AS [Talmacen.cc_tipana], 
            T.cc_locac AS [Talmacen.cc_locac], 
            T.cc_analis AS [Talmacen.cc_analis], 
            T.cc_cta AS [Talmacen.cc_cta], 
            T.cc_encar1 AS [Talmacen.cc_encar1], 
            T.cc_encar2 AS [Talmacen.cc_encar2], 
            T.cc_catalm AS [Talmacen.cc_catalm], 
            T.cd_direc AS [Talmacen.cd_direc], 
            T.cb_princ AS [Talmacen.cb_princ], 
            T.ci_activo AS [Talmacen.ci_activo], 
            T.fn_areas AS [Talmacen.fn_areas], 
            T.fn_zonas AS [Talmacen.fn_zonas], 
            T.fn_anaq AS [Talmacen.fn_anaq], 
            T.fn_and AS [Talmacen.fn_and], 
            T.fn_casil AS [Talmacen.fn_casil], 
            T.fm_presup AS [Talmacen.fm_presup], 
            T.fm_por_presup AS [Talmacen.fm_por_presup], 
            T.cc_prefijo AS [Talmacen.cc_prefijo], 
            T.cb_estado AS [Talmacen.cb_estado], 
            T.cd_direccion AS [Talmacen.cd_direccion], 
            T.cc_ubic_generic AS [Talmacen.cc_ubic_generic], 
            T.cc_tienda AS [Talmacen.cc_tienda], 
            T.cb_valorizar AS [Talmacen.cb_valorizar], 
            T.cod_establecimiento AS [Talmacen.cod_establecimiento], 
            True AS _from0
        FROM ZicoErpContext.TalmaceNs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TalmaceNs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TalmaceNs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Talmacen](T1.[Talmacen.cc_almac], T1.[Talmacen.cc_tipana], T1.[Talmacen.cc_locac], T1.[Talmacen.cc_analis], T1.[Talmacen.cc_cta], T1.[Talmacen.cc_encar1], T1.[Talmacen.cc_encar2], T1.[Talmacen.cc_catalm], T1.[Talmacen.cd_direc], T1.[Talmacen.cb_princ], T1.[Talmacen.ci_activo], T1.[Talmacen.fn_areas], T1.[Talmacen.fn_zonas], T1.[Talmacen.fn_anaq], T1.[Talmacen.fn_and], T1.[Talmacen.fn_casil], T1.[Talmacen.fm_presup], T1.[Talmacen.fm_por_presup], T1.[Talmacen.cc_prefijo], T1.[Talmacen.cb_estado], T1.[Talmacen.cd_direccion], T1.[Talmacen.cc_ubic_generic], T1.[Talmacen.cc_tienda], T1.[Talmacen.cb_valorizar], T1.[Talmacen.cod_establecimiento])
    FROM (
        SELECT 
            T.cc_almac AS [Talmacen.cc_almac], 
            T.cc_tipana AS [Talmacen.cc_tipana], 
            T.cc_locac AS [Talmacen.cc_locac], 
            T.cc_analis AS [Talmacen.cc_analis], 
            T.cc_cta AS [Talmacen.cc_cta], 
            T.cc_encar1 AS [Talmacen.cc_encar1], 
            T.cc_encar2 AS [Talmacen.cc_encar2], 
            T.cc_catalm AS [Talmacen.cc_catalm], 
            T.cd_direc AS [Talmacen.cd_direc], 
            T.cb_princ AS [Talmacen.cb_princ], 
            T.ci_activo AS [Talmacen.ci_activo], 
            T.fn_areas AS [Talmacen.fn_areas], 
            T.fn_zonas AS [Talmacen.fn_zonas], 
            T.fn_anaq AS [Talmacen.fn_anaq], 
            T.fn_and AS [Talmacen.fn_and], 
            T.fn_casil AS [Talmacen.fn_casil], 
            T.fm_presup AS [Talmacen.fm_presup], 
            T.fm_por_presup AS [Talmacen.fm_por_presup], 
            T.cc_prefijo AS [Talmacen.cc_prefijo], 
            T.cb_estado AS [Talmacen.cb_estado], 
            T.cd_direccion AS [Talmacen.cd_direccion], 
            T.cc_ubic_generic AS [Talmacen.cc_ubic_generic], 
            T.cc_tienda AS [Talmacen.cc_tienda], 
            T.cb_valorizar AS [Talmacen.cb_valorizar], 
            T.cod_establecimiento AS [Talmacen.cod_establecimiento], 
            True AS _from0
        FROM CodeFirstDatabase.Talmacen AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TESTADO.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TESTADO
        [CodeFirstDatabaseSchema.TESTADO](T1.[TESTADO.cc_estado], T1.[TESTADO.cd_estado], T1.[TESTADO.cb_estado], T1.[TESTADO.cc_usrcreacion], T1.[TESTADO.df_creacion], T1.[TESTADO.cc_usrmodifica], T1.[TESTADO.df_modifica], T1.[TESTADO.cb_fijo], T1.[TESTADO.cn_orden])
    FROM (
        SELECT 
            T.cc_estado AS [TESTADO.cc_estado], 
            T.cd_estado AS [TESTADO.cd_estado], 
            T.cb_estado AS [TESTADO.cb_estado], 
            T.cc_usrcreacion AS [TESTADO.cc_usrcreacion], 
            T.df_creacion AS [TESTADO.df_creacion], 
            T.cc_usrmodifica AS [TESTADO.cc_usrmodifica], 
            T.df_modifica AS [TESTADO.df_modifica], 
            T.cb_fijo AS [TESTADO.cb_fijo], 
            T.cn_orden AS [TESTADO.cn_orden], 
            True AS _from0
        FROM ZicoErpContext.Testados AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Testados.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Testados
        [Acetesa.TomaPedidos.DataEntityFramework.Models.TESTADO](T1.[TESTADO.cc_estado], T1.[TESTADO.cd_estado], T1.[TESTADO.cb_estado], T1.[TESTADO.cc_usrcreacion], T1.[TESTADO.df_creacion], T1.[TESTADO.cc_usrmodifica], T1.[TESTADO.df_modifica], T1.[TESTADO.cb_fijo], T1.[TESTADO.cn_orden])
    FROM (
        SELECT 
            T.cc_estado AS [TESTADO.cc_estado], 
            T.cd_estado AS [TESTADO.cd_estado], 
            T.cb_estado AS [TESTADO.cb_estado], 
            T.cc_usrcreacion AS [TESTADO.cc_usrcreacion], 
            T.df_creacion AS [TESTADO.df_creacion], 
            T.cc_usrmodifica AS [TESTADO.cc_usrmodifica], 
            T.df_modifica AS [TESTADO.df_modifica], 
            T.cb_fijo AS [TESTADO.cb_fijo], 
            T.cn_orden AS [TESTADO.cn_orden], 
            True AS _from0
        FROM CodeFirstDatabase.TESTADO AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tfamiart.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tfamiart
        [CodeFirstDatabaseSchema.Tfamiart](T1.[Tfamiart.cc_famart], T1.[Tfamiart.cd_famart], T1.[Tfamiart.cb_obsoleto], T1.[Tfamiart.cb_critico], T1.[Tfamiart.cb_partnumber], T1.[Tfamiart.c_fl_afecto_percepcion], T1.[Tfamiart.cb_comision], T1.[Tfamiart.cc_simbolo], T1.[Tfamiart.cc_tipo_exist])
    FROM (
        SELECT 
            T.cc_famart AS [Tfamiart.cc_famart], 
            T.cd_famart AS [Tfamiart.cd_famart], 
            T.cb_obsoleto AS [Tfamiart.cb_obsoleto], 
            T.cb_critico AS [Tfamiart.cb_critico], 
            T.cb_partnumber AS [Tfamiart.cb_partnumber], 
            T.c_fl_afecto_percepcion AS [Tfamiart.c_fl_afecto_percepcion], 
            T.cb_comision AS [Tfamiart.cb_comision], 
            T.cc_simbolo AS [Tfamiart.cc_simbolo], 
            T.cc_tipo_exist AS [Tfamiart.cc_tipo_exist], 
            True AS _from0
        FROM ZicoErpContext.TfamiarTs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TfamiarTs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TfamiarTs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tfamiart](T1.[Tfamiart.cc_famart], T1.[Tfamiart.cd_famart], T1.[Tfamiart.cb_obsoleto], T1.[Tfamiart.cb_critico], T1.[Tfamiart.cb_partnumber], T1.[Tfamiart.c_fl_afecto_percepcion], T1.[Tfamiart.cb_comision], T1.[Tfamiart.cc_simbolo], T1.[Tfamiart.cc_tipo_exist])
    FROM (
        SELECT 
            T.cc_famart AS [Tfamiart.cc_famart], 
            T.cd_famart AS [Tfamiart.cd_famart], 
            T.cb_obsoleto AS [Tfamiart.cb_obsoleto], 
            T.cb_critico AS [Tfamiart.cb_critico], 
            T.cb_partnumber AS [Tfamiart.cb_partnumber], 
            T.c_fl_afecto_percepcion AS [Tfamiart.c_fl_afecto_percepcion], 
            T.cb_comision AS [Tfamiart.cb_comision], 
            T.cc_simbolo AS [Tfamiart.cc_simbolo], 
            T.cc_tipo_exist AS [Tfamiart.cc_tipo_exist], 
            True AS _from0
        FROM CodeFirstDatabase.Tfamiart AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tgruartecduf.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tgruartecduf
        [CodeFirstDatabaseSchema.Tgruartecduf](T1.[Tgruartecduf.cc_gruartecduf], T1.[Tgruartecduf.cd_gruartduf])
    FROM (
        SELECT 
            T.cc_gruartecduf AS [Tgruartecduf.cc_gruartecduf], 
            T.cd_gruartduf AS [Tgruartecduf.cd_gruartduf], 
            True AS _from0
        FROM ZicoErpContext.TgruartecduFs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TgruartecduFs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TgruartecduFs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tgruartecduf](T1.[Tgruartecduf.cc_gruartecduf], T1.[Tgruartecduf.cd_gruartduf])
    FROM (
        SELECT 
            T.cc_gruartecduf AS [Tgruartecduf.cc_gruartecduf], 
            T.cd_gruartduf AS [Tgruartecduf.cd_gruartduf], 
            True AS _from0
        FROM CodeFirstDatabase.Tgruartecduf AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tgruartec.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tgruartec
        [CodeFirstDatabaseSchema.Tgruartec](T1.[Tgruartec.cc_gruartec], T1.[Tgruartec.cd_gruart])
    FROM (
        SELECT 
            T.cc_gruartec AS [Tgruartec.cc_gruartec], 
            T.cd_gruart AS [Tgruartec.cd_gruart], 
            True AS _from0
        FROM ZicoErpContext.TgruarteCs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TgruarteCs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TgruarteCs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tgruartec](T1.[Tgruartec.cc_gruartec], T1.[Tgruartec.cd_gruart])
    FROM (
        SELECT 
            T.cc_gruartec AS [Tgruartec.cc_gruartec], 
            T.cd_gruart AS [Tgruartec.cd_gruart], 
            True AS _from0
        FROM CodeFirstDatabase.Tgruartec AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.tipo_cambio_diario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing tipo_cambio_diario
        [CodeFirstDatabaseSchema.tipo_cambio_diario](T1.[tipo_cambio_diario.d_f_tipo_cambio], T1.[tipo_cambio_diario.n_i_valor_compra], T1.[tipo_cambio_diario.n_i_val_venta], T1.[tipo_cambio_diario.n_i_paralelo_venta], T1.[tipo_cambio_diario.n_i_paralelo_compra])
    FROM (
        SELECT 
            T.d_f_tipo_cambio AS [tipo_cambio_diario.d_f_tipo_cambio], 
            T.n_i_valor_compra AS [tipo_cambio_diario.n_i_valor_compra], 
            T.n_i_val_venta AS [tipo_cambio_diario.n_i_val_venta], 
            T.n_i_paralelo_venta AS [tipo_cambio_diario.n_i_paralelo_venta], 
            T.n_i_paralelo_compra AS [tipo_cambio_diario.n_i_paralelo_compra], 
            True AS _from0
        FROM ZicoErpContext.TipoCambioDiarios AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TipoCambioDiarios.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TipoCambioDiarios
        [Acetesa.TomaPedidos.DataEntityFramework.Models.tipo_cambio_diario](T1.[tipo_cambio_diario.d_f_tipo_cambio], T1.[tipo_cambio_diario.n_i_valor_compra], T1.[tipo_cambio_diario.n_i_val_venta], T1.[tipo_cambio_diario.n_i_paralelo_venta], T1.[tipo_cambio_diario.n_i_paralelo_compra])
    FROM (
        SELECT 
            T.d_f_tipo_cambio AS [tipo_cambio_diario.d_f_tipo_cambio], 
            T.n_i_valor_compra AS [tipo_cambio_diario.n_i_valor_compra], 
            T.n_i_val_venta AS [tipo_cambio_diario.n_i_val_venta], 
            T.n_i_paralelo_venta AS [tipo_cambio_diario.n_i_paralelo_venta], 
            T.n_i_paralelo_compra AS [tipo_cambio_diario.n_i_paralelo_compra], 
            True AS _from0
        FROM CodeFirstDatabase.tipo_cambio_diario AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tmarca.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tmarca
        [CodeFirstDatabaseSchema.Tmarca](T1.[Tmarca.cc_marca], T1.[Tmarca.cd_marca], T1.[Tmarca.cb_estado], T1.[Tmarca.cb_tipo])
    FROM (
        SELECT 
            T.cc_marca AS [Tmarca.cc_marca], 
            T.cd_marca AS [Tmarca.cd_marca], 
            T.cb_estado AS [Tmarca.cb_estado], 
            T.cb_tipo AS [Tmarca.cb_tipo], 
            True AS _from0
        FROM ZicoErpContext.TmarcAs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TmarcAs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TmarcAs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tmarca](T1.[Tmarca.cc_marca], T1.[Tmarca.cd_marca], T1.[Tmarca.cb_estado], T1.[Tmarca.cb_tipo])
    FROM (
        SELECT 
            T.cc_marca AS [Tmarca.cc_marca], 
            T.cd_marca AS [Tmarca.cd_marca], 
            T.cb_estado AS [Tmarca.cb_estado], 
            T.cb_tipo AS [Tmarca.cb_tipo], 
            True AS _from0
        FROM CodeFirstDatabase.Tmarca AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tmodelo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tmodelo
        [CodeFirstDatabaseSchema.Tmodelo](T1.[Tmodelo.cc_marca], T1.[Tmodelo.cc_modelo], T1.[Tmodelo.cd_modelo], T1.[Tmodelo.ct_graf])
    FROM (
        SELECT 
            T.cc_marca AS [Tmodelo.cc_marca], 
            T.cc_modelo AS [Tmodelo.cc_modelo], 
            T.cd_modelo AS [Tmodelo.cd_modelo], 
            T.ct_graf AS [Tmodelo.ct_graf], 
            True AS _from0
        FROM ZicoErpContext.TmodelOes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TmodelOes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TmodelOes
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tmodelo](T1.[Tmodelo.cc_marca], T1.[Tmodelo.cc_modelo], T1.[Tmodelo.cd_modelo], T1.[Tmodelo.ct_graf])
    FROM (
        SELECT 
            T.cc_marca AS [Tmodelo.cc_marca], 
            T.cc_modelo AS [Tmodelo.cc_modelo], 
            T.cd_modelo AS [Tmodelo.cd_modelo], 
            T.ct_graf AS [Tmodelo.ct_graf], 
            True AS _from0
        FROM CodeFirstDatabase.Tmodelo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tsubgruartecduf.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tsubgruartecduf
        [CodeFirstDatabaseSchema.Tsubgruartecduf](T1.[Tsubgruartecduf.cc_gruartecduf], T1.[Tsubgruartecduf.cc_subgruartduf], T1.[Tsubgruartecduf.cd_subgruartduf])
    FROM (
        SELECT 
            T.cc_gruartecduf AS [Tsubgruartecduf.cc_gruartecduf], 
            T.cc_subgruartduf AS [Tsubgruartecduf.cc_subgruartduf], 
            T.cd_subgruartduf AS [Tsubgruartecduf.cd_subgruartduf], 
            True AS _from0
        FROM ZicoErpContext.TsubgruartecduFs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TsubgruartecduFs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TsubgruartecduFs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tsubgruartecduf](T1.[Tsubgruartecduf.cc_gruartecduf], T1.[Tsubgruartecduf.cc_subgruartduf], T1.[Tsubgruartecduf.cd_subgruartduf])
    FROM (
        SELECT 
            T.cc_gruartecduf AS [Tsubgruartecduf.cc_gruartecduf], 
            T.cc_subgruartduf AS [Tsubgruartecduf.cc_subgruartduf], 
            T.cd_subgruartduf AS [Tsubgruartecduf.cd_subgruartduf], 
            True AS _from0
        FROM CodeFirstDatabase.Tsubgruartecduf AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Tsubgruartec.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tsubgruartec
        [CodeFirstDatabaseSchema.Tsubgruartec](T1.[Tsubgruartec.cc_gruartec], T1.[Tsubgruartec.cc_subgruart], T1.[Tsubgruartec.cd_subgruart])
    FROM (
        SELECT 
            T.cc_gruartec AS [Tsubgruartec.cc_gruartec], 
            T.cc_subgruart AS [Tsubgruartec.cc_subgruart], 
            T.cd_subgruart AS [Tsubgruartec.cd_subgruart], 
            True AS _from0
        FROM ZicoErpContext.TsubgruarteCs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TsubgruarteCs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TsubgruarteCs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Tsubgruartec](T1.[Tsubgruartec.cc_gruartec], T1.[Tsubgruartec.cc_subgruart], T1.[Tsubgruartec.cd_subgruart])
    FROM (
        SELECT 
            T.cc_gruartec AS [Tsubgruartec.cc_gruartec], 
            T.cc_subgruart AS [Tsubgruartec.cc_subgruart], 
            T.cd_subgruart AS [Tsubgruartec.cd_subgruart], 
            True AS _from0
        FROM CodeFirstDatabase.Tsubgruartec AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Ttipoartic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Ttipoartic
        [CodeFirstDatabaseSchema.Ttipoartic](T1.[Ttipoartic.cc_tipoartic], T1.[Ttipoartic.cd_tipoartic])
    FROM (
        SELECT 
            T.cc_tipoartic AS [Ttipoartic.cc_tipoartic], 
            T.cd_tipoartic AS [Ttipoartic.cd_tipoartic], 
            True AS _from0
        FROM ZicoErpContext.TtipoartiCs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.TtipoartiCs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TtipoartiCs
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Ttipoartic](T1.[Ttipoartic.cc_tipoartic], T1.[Ttipoartic.cd_tipoartic])
    FROM (
        SELECT 
            T.cc_tipoartic AS [Ttipoartic.cc_tipoartic], 
            T.cd_tipoartic AS [Ttipoartic.cd_tipoartic], 
            True AS _from0
        FROM CodeFirstDatabase.Ttipoartic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Usuario.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usuario
        [CodeFirstDatabaseSchema.Usuario](T1.[Usuario.c_c_usuario], T1.[Usuario.c_t_password], T1.[Usuario.c_t_nombre], T1.[Usuario.c_fl_activo], T1.[Usuario.c_t_cliente], T1.[Usuario.C_C_NIV_SECUENCIA], T1.[Usuario.c_c_niv_modifica], T1.[Usuario.d_f_conexion], T1.[Usuario.c_fl_hextras], T1.[Usuario.cb_activo], T1.[Usuario.c_t_email], T1.[Usuario.c_fl_anticipo], T1.[Usuario.c_fl_notpedvta], T1.[Usuario.c_fl_cdvta], T1.[Usuario.c_fl_limcred], T1.[Usuario.c_fl_verFact], T1.[Usuario.c_fl_verBole], T1.[Usuario.c_fl_verNota], T1.[Usuario.c_fl_HD], T1.[Usuario.c_fl_clievincul], T1.[Usuario.c_fl_pedalm], T1.[Usuario.cb_aut_papsal], T1.[Usuario.cc_usuario_bd], T1.[Usuario.cc_password_bd], T1.[Usuario.c_fl_cat_mat])
    FROM (
        SELECT 
            T.c_c_usuario AS [Usuario.c_c_usuario], 
            T.c_t_password AS [Usuario.c_t_password], 
            T.c_t_nombre AS [Usuario.c_t_nombre], 
            T.c_fl_activo AS [Usuario.c_fl_activo], 
            T.c_t_cliente AS [Usuario.c_t_cliente], 
            T.C_C_NIV_SECUENCIA AS [Usuario.C_C_NIV_SECUENCIA], 
            T.c_c_niv_modifica AS [Usuario.c_c_niv_modifica], 
            T.d_f_conexion AS [Usuario.d_f_conexion], 
            T.c_fl_hextras AS [Usuario.c_fl_hextras], 
            T.cb_activo AS [Usuario.cb_activo], 
            T.c_t_email AS [Usuario.c_t_email], 
            T.c_fl_anticipo AS [Usuario.c_fl_anticipo], 
            T.c_fl_notpedvta AS [Usuario.c_fl_notpedvta], 
            T.c_fl_cdvta AS [Usuario.c_fl_cdvta], 
            T.c_fl_limcred AS [Usuario.c_fl_limcred], 
            T.c_fl_verFact AS [Usuario.c_fl_verFact], 
            T.c_fl_verBole AS [Usuario.c_fl_verBole], 
            T.c_fl_verNota AS [Usuario.c_fl_verNota], 
            T.c_fl_HD AS [Usuario.c_fl_HD], 
            T.c_fl_clievincul AS [Usuario.c_fl_clievincul], 
            T.c_fl_pedalm AS [Usuario.c_fl_pedalm], 
            T.cb_aut_papsal AS [Usuario.cb_aut_papsal], 
            T.cc_usuario_bd AS [Usuario.cc_usuario_bd], 
            T.cc_password_bd AS [Usuario.cc_password_bd], 
            T.c_fl_cat_mat AS [Usuario.c_fl_cat_mat], 
            True AS _from0
        FROM ZicoErpContext.Usuarios AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ZicoErpContext.Usuarios.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Usuarios
        [Acetesa.TomaPedidos.DataEntityFramework.Models.Usuario](T1.[Usuario.c_c_usuario], T1.[Usuario.c_t_password], T1.[Usuario.c_t_nombre], T1.[Usuario.c_fl_activo], T1.[Usuario.c_t_cliente], T1.[Usuario.C_C_NIV_SECUENCIA], T1.[Usuario.c_c_niv_modifica], T1.[Usuario.d_f_conexion], T1.[Usuario.c_fl_hextras], T1.[Usuario.cb_activo], T1.[Usuario.c_t_email], T1.[Usuario.c_fl_anticipo], T1.[Usuario.c_fl_notpedvta], T1.[Usuario.c_fl_cdvta], T1.[Usuario.c_fl_limcred], T1.[Usuario.c_fl_verFact], T1.[Usuario.c_fl_verBole], T1.[Usuario.c_fl_verNota], T1.[Usuario.c_fl_HD], T1.[Usuario.c_fl_clievincul], T1.[Usuario.c_fl_pedalm], T1.[Usuario.cb_aut_papsal], T1.[Usuario.cc_usuario_bd], T1.[Usuario.cc_password_bd], T1.[Usuario.c_fl_cat_mat])
    FROM (
        SELECT 
            T.c_c_usuario AS [Usuario.c_c_usuario], 
            T.c_t_password AS [Usuario.c_t_password], 
            T.c_t_nombre AS [Usuario.c_t_nombre], 
            T.c_fl_activo AS [Usuario.c_fl_activo], 
            T.c_t_cliente AS [Usuario.c_t_cliente], 
            T.C_C_NIV_SECUENCIA AS [Usuario.C_C_NIV_SECUENCIA], 
            T.c_c_niv_modifica AS [Usuario.c_c_niv_modifica], 
            T.d_f_conexion AS [Usuario.d_f_conexion], 
            T.c_fl_hextras AS [Usuario.c_fl_hextras], 
            T.cb_activo AS [Usuario.cb_activo], 
            T.c_t_email AS [Usuario.c_t_email], 
            T.c_fl_anticipo AS [Usuario.c_fl_anticipo], 
            T.c_fl_notpedvta AS [Usuario.c_fl_notpedvta], 
            T.c_fl_cdvta AS [Usuario.c_fl_cdvta], 
            T.c_fl_limcred AS [Usuario.c_fl_limcred], 
            T.c_fl_verFact AS [Usuario.c_fl_verFact], 
            T.c_fl_verBole AS [Usuario.c_fl_verBole], 
            T.c_fl_verNota AS [Usuario.c_fl_verNota], 
            T.c_fl_HD AS [Usuario.c_fl_HD], 
            T.c_fl_clievincul AS [Usuario.c_fl_clievincul], 
            T.c_fl_pedalm AS [Usuario.c_fl_pedalm], 
            T.cb_aut_papsal AS [Usuario.cb_aut_papsal], 
            T.cc_usuario_bd AS [Usuario.cc_usuario_bd], 
            T.cc_password_bd AS [Usuario.cc_password_bd], 
            T.c_fl_cat_mat AS [Usuario.c_fl_cat_mat], 
            True AS _from0
        FROM CodeFirstDatabase.Usuario AS T
    ) AS T1");
        }
    }
}
